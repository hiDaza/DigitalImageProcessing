/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import DPIoperations.ColorToGray;
import DPIoperations.GrayToInversal;
import DPIoperations.RandomPositions;
import DPIoperations.SeparateRGB;
import LogsImage.ImageBuffer;
import java.awt.BorderLayout;
import java.awt.CardLayout;
import java.awt.Graphics;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Daza_
 */
public class dpiGUI extends javax.swing.JFrame {
    private final ImagePanel imagePanel;
    private final ImageBuffer imageBuffer;
    private BufferedImage originalImage;
    
    
    int size = 10000;
    //RandomPositions randomPositions = new RandomPositions();
    int vetX[];
    int vetY[];
    
    
    
    /**
     * Creates new form dpiGUI
     */
    public dpiGUI() {
            
        initComponents();
        setLocationRelativeTo(null);

        mainPanel.setLayout(new CardLayout());
        
        imagePanel = new ImagePanel();
        jPanel1.setLayout(new BorderLayout());
        jPanel1.add(imagePanel, BorderLayout.CENTER);
        jPanel1.revalidate();
        jPanel1.repaint();
        
        mainPanel.add(ConvertToGray,"ConvertToGray");
        mainPanel.add(inversalPanel,"inversalPanel");
        mainPanel.add(jPanel1,"jPanel1");
        mainPanel.add(originaltoRGBPanel,"OriginalToRGB");
        mainPanel.add(picPixelsPanel,"picPixels");
        imageBuffer = new ImageBuffer();
        
       
        
    }
    
    private BufferedImage copyImage(BufferedImage source) {
        BufferedImage copy = new BufferedImage(source.getWidth(), source.getHeight(), source.getType());
        Graphics g = copy.getGraphics();
        g.drawImage(source, 0, 0, null);
        g.dispose();
        return copy;
}


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        picPixelsPanel = new javax.swing.JPanel();
        pixelsImagePanel = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        RGBTextField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        RvalueTextField = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        GvalueTextField = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        BvalueTextField = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        XTextField = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        YTextField = new javax.swing.JTextField();
        ConvertToGray = new javax.swing.JPanel();
        OriginalImage = new javax.swing.JPanel();
        GrayImage = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButtonConverter = new javax.swing.JButton();
        getImageButton = new javax.swing.JButton();
        inversalPanel = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        originalGrayPanel = new javax.swing.JPanel();
        inversalGrayPanel = new javax.swing.JPanel();
        inversalButton = new javax.swing.JButton();
        getInversalButton = new javax.swing.JButton();
        originaltoRGBPanel = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        OriginalColorsPanel = new javax.swing.JPanel();
        RcolorPanel = new javax.swing.JPanel();
        GcolorPanel = new javax.swing.JPanel();
        BcolorPanel = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1360, 720));
        getContentPane().setLayout(new java.awt.CardLayout());

        jLabel3.setText("Bem Vindo ao Programa de Processamento Digital De Imagem, Selecione as opções Desejadas no Menu.");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 697, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(776, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(120, 120, 120)
                .addComponent(jLabel3)
                .addContainerGap(420, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(mainPanel, "card2");

        pixelsImagePanel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                pixelsImagePanelMouseDragged(evt);
            }
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                pixelsImagePanelMouseMoved(evt);
            }
        });
        pixelsImagePanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pixelsImagePanelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pixelsImagePanelLayout = new javax.swing.GroupLayout(pixelsImagePanel);
        pixelsImagePanel.setLayout(pixelsImagePanelLayout);
        pixelsImagePanelLayout.setHorizontalGroup(
            pixelsImagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 287, Short.MAX_VALUE)
        );
        pixelsImagePanelLayout.setVerticalGroup(
            pixelsImagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 288, Short.MAX_VALUE)
        );

        jLabel9.setText("Valor RGB");

        jLabel10.setText("Valor de R");

        jLabel11.setText("Valor de G");

        jLabel12.setText("Valor de B");

        jLabel13.setText("Coordenadas");

        jLabel14.setText("X: ");

        jLabel15.setText("Y: ");

        javax.swing.GroupLayout picPixelsPanelLayout = new javax.swing.GroupLayout(picPixelsPanel);
        picPixelsPanel.setLayout(picPixelsPanelLayout);
        picPixelsPanelLayout.setHorizontalGroup(
            picPixelsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(picPixelsPanelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(pixelsImagePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(78, 78, 78)
                .addGroup(picPixelsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addGroup(picPixelsPanelLayout.createSequentialGroup()
                        .addGroup(picPixelsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(picPixelsPanelLayout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(XTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel15))
                            .addGroup(picPixelsPanelLayout.createSequentialGroup()
                                .addGroup(picPixelsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(RGBTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(picPixelsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10)
                                    .addComponent(RvalueTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(picPixelsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(picPixelsPanelLayout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addGroup(picPixelsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11)
                                    .addComponent(GvalueTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(picPixelsPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(YTextField)))
                        .addGap(18, 18, 18)
                        .addGroup(picPixelsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(BvalueTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(775, Short.MAX_VALUE))
        );
        picPixelsPanelLayout.setVerticalGroup(
            picPixelsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(picPixelsPanelLayout.createSequentialGroup()
                .addGroup(picPixelsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(picPixelsPanelLayout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(pixelsImagePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(picPixelsPanelLayout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addGroup(picPixelsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(picPixelsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(RGBTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(RvalueTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(GvalueTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BvalueTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel13)
                        .addGap(18, 18, 18)
                        .addGroup(picPixelsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(XTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15)
                            .addComponent(YTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(237, Short.MAX_VALUE))
        );

        getContentPane().add(picPixelsPanel, "card7");

        javax.swing.GroupLayout OriginalImageLayout = new javax.swing.GroupLayout(OriginalImage);
        OriginalImage.setLayout(OriginalImageLayout);
        OriginalImageLayout.setHorizontalGroup(
            OriginalImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        OriginalImageLayout.setVerticalGroup(
            OriginalImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 315, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout GrayImageLayout = new javax.swing.GroupLayout(GrayImage);
        GrayImage.setLayout(GrayImageLayout);
        GrayImageLayout.setHorizontalGroup(
            GrayImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 249, Short.MAX_VALUE)
        );
        GrayImageLayout.setVerticalGroup(
            GrayImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 292, Short.MAX_VALUE)
        );

        jLabel1.setText("Imagem Original");

        jLabel2.setText("Imagem Apos Conversão");

        jButtonConverter.setText("Converter");
        jButtonConverter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConverterActionPerformed(evt);
            }
        });

        getImageButton.setText("Obter Imagem");
        getImageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getImageButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ConvertToGrayLayout = new javax.swing.GroupLayout(ConvertToGray);
        ConvertToGray.setLayout(ConvertToGrayLayout);
        ConvertToGrayLayout.setHorizontalGroup(
            ConvertToGrayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ConvertToGrayLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(ConvertToGrayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE)
                    .addComponent(OriginalImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(ConvertToGrayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(ConvertToGrayLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 933, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ConvertToGrayLayout.createSequentialGroup()
                        .addGroup(ConvertToGrayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ConvertToGrayLayout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(jButtonConverter, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(ConvertToGrayLayout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addComponent(getImageButton)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(GrayImage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(65, 65, 65))
        );
        ConvertToGrayLayout.setVerticalGroup(
            ConvertToGrayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ConvertToGrayLayout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(ConvertToGrayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1))
                .addGroup(ConvertToGrayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ConvertToGrayLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(OriginalImage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ConvertToGrayLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(GrayImage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ConvertToGrayLayout.createSequentialGroup()
                        .addGap(156, 156, 156)
                        .addComponent(jButtonConverter)
                        .addGap(41, 41, 41)
                        .addComponent(getImageButton)))
                .addContainerGap(174, Short.MAX_VALUE))
        );

        getContentPane().add(ConvertToGray, "card3");

        jLabel4.setText("Original Cinza");

        jLabel5.setText("Inversa ");

        javax.swing.GroupLayout originalGrayPanelLayout = new javax.swing.GroupLayout(originalGrayPanel);
        originalGrayPanel.setLayout(originalGrayPanelLayout);
        originalGrayPanelLayout.setHorizontalGroup(
            originalGrayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        originalGrayPanelLayout.setVerticalGroup(
            originalGrayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout inversalGrayPanelLayout = new javax.swing.GroupLayout(inversalGrayPanel);
        inversalGrayPanel.setLayout(inversalGrayPanelLayout);
        inversalGrayPanelLayout.setHorizontalGroup(
            inversalGrayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 282, Short.MAX_VALUE)
        );
        inversalGrayPanelLayout.setVerticalGroup(
            inversalGrayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 213, Short.MAX_VALUE)
        );

        inversalButton.setText("Inverter");
        inversalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inversalButtonActionPerformed(evt);
            }
        });

        getInversalButton.setText("Obter a Imagem");
        getInversalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getInversalButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout inversalPanelLayout = new javax.swing.GroupLayout(inversalPanel);
        inversalPanel.setLayout(inversalPanelLayout);
        inversalPanelLayout.setHorizontalGroup(
            inversalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inversalPanelLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(inversalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE)
                    .addComponent(originalGrayPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(inversalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(inversalButton, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                    .addComponent(getInversalButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(23, 23, 23)
                .addGroup(inversalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inversalGrayPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(818, Short.MAX_VALUE))
        );
        inversalPanelLayout.setVerticalGroup(
            inversalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inversalPanelLayout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addGroup(inversalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addGroup(inversalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(inversalPanelLayout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(inversalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(inversalGrayPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(originalGrayPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(241, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, inversalPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(inversalButton)
                        .addGap(18, 18, 18)
                        .addComponent(getInversalButton)
                        .addGap(172, 172, 172))))
        );

        getContentPane().add(inversalPanel, "card5");

        jButton1.setText("Separar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout OriginalColorsPanelLayout = new javax.swing.GroupLayout(OriginalColorsPanel);
        OriginalColorsPanel.setLayout(OriginalColorsPanelLayout);
        OriginalColorsPanelLayout.setHorizontalGroup(
            OriginalColorsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 250, Short.MAX_VALUE)
        );
        OriginalColorsPanelLayout.setVerticalGroup(
            OriginalColorsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 250, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout RcolorPanelLayout = new javax.swing.GroupLayout(RcolorPanel);
        RcolorPanel.setLayout(RcolorPanelLayout);
        RcolorPanelLayout.setHorizontalGroup(
            RcolorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 250, Short.MAX_VALUE)
        );
        RcolorPanelLayout.setVerticalGroup(
            RcolorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 251, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout GcolorPanelLayout = new javax.swing.GroupLayout(GcolorPanel);
        GcolorPanel.setLayout(GcolorPanelLayout);
        GcolorPanelLayout.setHorizontalGroup(
            GcolorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 249, Short.MAX_VALUE)
        );
        GcolorPanelLayout.setVerticalGroup(
            GcolorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 250, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout BcolorPanelLayout = new javax.swing.GroupLayout(BcolorPanel);
        BcolorPanel.setLayout(BcolorPanelLayout);
        BcolorPanelLayout.setHorizontalGroup(
            BcolorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 249, Short.MAX_VALUE)
        );
        BcolorPanelLayout.setVerticalGroup(
            BcolorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 250, Short.MAX_VALUE)
        );

        jLabel6.setText("CANAL R");

        jLabel7.setText("CANAL G");

        jLabel8.setText("CANAL B");

        javax.swing.GroupLayout originaltoRGBPanelLayout = new javax.swing.GroupLayout(originaltoRGBPanel);
        originaltoRGBPanel.setLayout(originaltoRGBPanelLayout);
        originaltoRGBPanelLayout.setHorizontalGroup(
            originaltoRGBPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(originaltoRGBPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(originaltoRGBPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(OriginalColorsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(originaltoRGBPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel8)
                        .addComponent(BcolorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addGap(34, 34, 34)
                .addGroup(originaltoRGBPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(RcolorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(originaltoRGBPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(GcolorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        originaltoRGBPanelLayout.setVerticalGroup(
            originaltoRGBPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, originaltoRGBPanelLayout.createSequentialGroup()
                .addGroup(originaltoRGBPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(originaltoRGBPanelLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(OriginalColorsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(originaltoRGBPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(originaltoRGBPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(originaltoRGBPanelLayout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(RcolorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(originaltoRGBPanelLayout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGroup(originaltoRGBPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(originaltoRGBPanelLayout.createSequentialGroup()
                                        .addGap(132, 132, 132)
                                        .addComponent(jButton1))
                                    .addGroup(originaltoRGBPanelLayout.createSequentialGroup()
                                        .addGap(11, 11, 11)
                                        .addComponent(GcolorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(1, 1, 1)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BcolorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getContentPane().add(originaltoRGBPanel, "card6");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1539, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 568, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1, "card3");

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        jMenu1.setText("File");

        jMenuItem1.setText("Open");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu3.setText("Operações");

        jMenuItem2.setText("Conversor Para Cinza");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem2);

        jMenuItem3.setText("Inverter o Cinza");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem3);

        jMenuItem4.setText("Separar os Canais ");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem4);

        jMenuItem5.setText("Encontrar Pixels");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem5);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        
        imagePanel.clearImage();
        originalImage = null;
        imageBuffer.clear();
        
        CardLayout cardLayout =  (CardLayout) mainPanel.getLayout();
        cardLayout.show(mainPanel,"jPanel1");
        
        
        
        
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Imagens", "jpg","png");
        
        JFileChooser JFCimage = new JFileChooser();
        
        JFCimage.setFileSelectionMode(JFileChooser.FILES_ONLY);
        JFCimage.setAcceptAllFileFilterUsed(false);
        JFCimage.addChoosableFileFilter(filter);    

        if(JFCimage.showOpenDialog(this) == JFileChooser.APPROVE_OPTION){
            File file = JFCimage.getSelectedFile();
            
            try {
                originalImage = ImageIO.read(file);
                
                imageBuffer.setImage(originalImage);
                
                imagePanel.setImage(originalImage);
                imagePanel.revalidate();
                
                jPanel1.setLayout(new BorderLayout());
                jPanel1.add(imagePanel, BorderLayout.CENTER);
                
                imagePanel.repaint();
                pack();
              
            } catch (IOException ex) {
                Logger.getLogger(dpiGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        CardLayout cardLayout =  (CardLayout) mainPanel.getLayout();
        cardLayout.show(mainPanel,"ConvertToGray");
        
        
        
        
        BufferedImage img = imageBuffer.getImage();
        if(img != null){
            ImagePanel OriginalPanel = new ImagePanel();
            
            OriginalImage.removeAll();
            OriginalPanel.setImage(img);
            OriginalImage.setLayout(new BorderLayout());
            OriginalImage.add(OriginalPanel, BorderLayout.CENTER);
            OriginalImage.revalidate();
            OriginalImage.repaint();
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jButtonConverterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConverterActionPerformed
        // TODO add your handling code here:
        
        
        BufferedImage img = imageBuffer.getImage();
        
        
        if(img != null){
            
            BufferedImage copyImage = copyImage(originalImage);
            ColorToGray RGBtoGray = new ColorToGray();
            
            BufferedImage grayImage = RGBtoGray.toGray(copyImage);
            
            ImagePanel grayImagePanel = new ImagePanel();
            grayImagePanel.setImage(grayImage);
            GrayImage.removeAll();
            GrayImage.setLayout(new BorderLayout());
            GrayImage.add(grayImagePanel, BorderLayout.CENTER);
            GrayImage.revalidate();
            GrayImage.repaint();
        }
    }//GEN-LAST:event_jButtonConverterActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        CardLayout cardLayout =  (CardLayout) mainPanel.getLayout();
        cardLayout.show(mainPanel,"inversalPanel");
        
     

       
            
            ImagePanel grayOriginalPanel = new ImagePanel();
            grayOriginalPanel.setImage(originalImage);
            originalGrayPanel.removeAll();
            originalGrayPanel.setLayout(new BorderLayout());
            originalGrayPanel.add(grayOriginalPanel, BorderLayout.CENTER);
            originalGrayPanel.revalidate();
            originalGrayPanel.repaint();
        
        
        
        
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void getImageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getImageButtonActionPerformed
        // TODO add your handling code here:
         
        
       ColorToGray RGBtoGray = new ColorToGray();
       RGBtoGray.toGrayEver(originalImage);
       OriginalImage.removeAll();
       ImagePanel OriginalPanel = new ImagePanel();
       OriginalPanel.setImage(originalImage);
       OriginalImage.setLayout(new BorderLayout());
       OriginalImage.add(OriginalPanel, BorderLayout.CENTER);
       OriginalImage.revalidate();
       OriginalImage.repaint();
        
    }//GEN-LAST:event_getImageButtonActionPerformed

    private void inversalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inversalButtonActionPerformed
        // TODO add your handling code here:
        
        BufferedImage img = imageBuffer.getImage();
        
        
        if(img != null){
            
            BufferedImage copyImage = copyImage(originalImage);
            GrayToInversal graytoInversal = new GrayToInversal();
            
            BufferedImage inversalGray = graytoInversal.toInversal(copyImage);
            
            ImagePanel inversalPanel = new ImagePanel();
            inversalPanel.setImage(inversalGray);
            inversalGrayPanel.removeAll();
            inversalGrayPanel.setLayout(new BorderLayout());
            inversalGrayPanel.add(inversalPanel, BorderLayout.CENTER);
            inversalGrayPanel.revalidate();
            inversalGrayPanel.repaint();
        }
        
        
    }//GEN-LAST:event_inversalButtonActionPerformed

    private void getInversalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getInversalButtonActionPerformed
        // TODO add your handling code here:
        
       GrayToInversal graytoInversal = new GrayToInversal();
       graytoInversal.toInversalEver(originalImage);
       
       ImagePanel inversalPanel = new ImagePanel();
       
       inversalPanel.setImage(originalImage);
       originalGrayPanel.removeAll();
       originalGrayPanel.setLayout(new BorderLayout());
       originalGrayPanel.add(inversalPanel, BorderLayout.CENTER);
       originalGrayPanel.revalidate();
       originalGrayPanel.repaint();
       
    }//GEN-LAST:event_getInversalButtonActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
        
        CardLayout cardLayout =  (CardLayout) mainPanel.getLayout();
        cardLayout.show(mainPanel,"OriginalToRGB");
        
        
            ImagePanel originalPanelRGB = new ImagePanel();
            originalPanelRGB.setImage(originalImage);
            //originaltoRGBPanel.removeAll();
            OriginalColorsPanel.setLayout(new BorderLayout());
            OriginalColorsPanel.add(originalPanelRGB, BorderLayout.CENTER);
            OriginalColorsPanel.revalidate();
            OriginalColorsPanel.repaint();
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        SeparateRGB sprRGB = new SeparateRGB();
        BufferedImage redImage = sprRGB.separateColor(originalImage, 1);
        
        ImagePanel rPanel = new ImagePanel();
        rPanel.setImage(redImage);
        RcolorPanel.removeAll();
        RcolorPanel.setLayout(new BorderLayout());
        RcolorPanel.add(rPanel, BorderLayout.CENTER);
        RcolorPanel.revalidate();
        RcolorPanel.repaint();
        
        BufferedImage greenImage = sprRGB.separateColor(originalImage, 2);
        
        ImagePanel gPanel = new ImagePanel();
        gPanel.setImage(greenImage);
        GcolorPanel.removeAll();
        GcolorPanel.setLayout(new BorderLayout());
        GcolorPanel.add(gPanel, BorderLayout.CENTER);
        GcolorPanel.revalidate();
        GcolorPanel.repaint();
        
        BufferedImage blueImage = sprRGB.separateColor(originalImage, 3);
        
        ImagePanel bPanel = new ImagePanel();
        bPanel.setImage(blueImage);
        BcolorPanel.removeAll();
        BcolorPanel.setLayout(new BorderLayout());
        BcolorPanel.add(bPanel, BorderLayout.CENTER);
        BcolorPanel.revalidate();
        BcolorPanel.repaint();
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // TODO add your handling code here:
        CardLayout cardLayout =  (CardLayout) mainPanel.getLayout();
        cardLayout.show(mainPanel,"picPixels");
        
        RandomPositions randomPositions = new RandomPositions();
        vetX = randomPositions.randomPointsX(originalImage,size);
        vetY = randomPositions.randomPointsY(originalImage,size);
        
            
        
        
        ImagePanel pixelPanel = new ImagePanel();
        pixelPanel.setImage(originalImage);
        pixelsImagePanel.removeAll();
        pixelsImagePanel.setLayout(new BorderLayout());
        pixelsImagePanel.add(pixelPanel, BorderLayout.CENTER);
        pixelsImagePanel.revalidate();
        pixelsImagePanel.repaint();
 
        
        
        
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void pixelsImagePanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pixelsImagePanelMouseClicked
        // TODO add your handling code here:

        
        

        
        
        
        
        
        
    }//GEN-LAST:event_pixelsImagePanelMouseClicked

    private void pixelsImagePanelMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pixelsImagePanelMouseDragged
        // TODO add your handling code here:
    }//GEN-LAST:event_pixelsImagePanelMouseDragged

    private void pixelsImagePanelMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pixelsImagePanelMouseMoved
        // TODO add your handling code here:
        
        int x = evt.getX();
        int y = evt.getY();
        String strX = Integer.toString(x);
        String strY = Integer.toString(y);
       
        
        for(int i = 0; i < size; i++){
            
            if(vetX[i] == x && vetY[i] == y){
                int rgb = originalImage.getRGB(x, y);
                int r = (rgb >> 16) & 0xFF;
                int g = (rgb >> 8) & 0xFF;
                int b = rgb & 0xFF;
                String strRGB = Integer.toString(rgb);
                String strR = Integer.toString(r);
                String strG = Integer.toString(g);
                String strB = Integer.toString(b);
                RGBTextField.setText(strRGB);
                RvalueTextField.setText(strR);
                GvalueTextField.setText(strG);
                BvalueTextField.setText(strB);
                XTextField.setText(strX);
                YTextField.setText(strY);
                
            }
        }
    }//GEN-LAST:event_pixelsImagePanelMouseMoved

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(dpiGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(dpiGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(dpiGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(dpiGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new dpiGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel BcolorPanel;
    private javax.swing.JTextField BvalueTextField;
    private javax.swing.JPanel ConvertToGray;
    private javax.swing.JPanel GcolorPanel;
    private javax.swing.JPanel GrayImage;
    private javax.swing.JTextField GvalueTextField;
    private javax.swing.JPanel OriginalColorsPanel;
    private javax.swing.JPanel OriginalImage;
    private javax.swing.JTextField RGBTextField;
    private javax.swing.JPanel RcolorPanel;
    private javax.swing.JTextField RvalueTextField;
    private javax.swing.JTextField XTextField;
    private javax.swing.JTextField YTextField;
    private javax.swing.JButton getImageButton;
    private javax.swing.JButton getInversalButton;
    private javax.swing.JButton inversalButton;
    private javax.swing.JPanel inversalGrayPanel;
    private javax.swing.JPanel inversalPanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonConverter;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JPanel originalGrayPanel;
    private javax.swing.JPanel originaltoRGBPanel;
    private javax.swing.JPanel picPixelsPanel;
    private javax.swing.JPanel pixelsImagePanel;
    // End of variables declaration//GEN-END:variables
}
