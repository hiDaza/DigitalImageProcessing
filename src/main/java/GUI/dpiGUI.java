/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;


import Converter.ColorConverterFrame;
import DPIoperations.AverageFilter;
import DPIoperations.ColorImage;
import DPIoperations.ColorToGray;
import DPIoperations.Equalization;
import DPIoperations.GrayToInversal;
import DPIoperations.Highlight;
import DPIoperations.Interpolation;
import DPIoperations.MeanMedianFilters;
import DPIoperations.MinMax;
import DPIoperations.RandomNoises;
import DPIoperations.RandomPositions;
import DPIoperations.SeparateRGB;
import DPIoperations.Thinning;
import DPIoperations.Transformed;
import LogsImage.ImageBuffer;
import java.awt.BorderLayout;
import java.awt.CardLayout;
import java.awt.Graphics;
import java.awt.List;
import java.awt.Point;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;

import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Daza_
 */
public class dpiGUI extends javax.swing.JFrame {
    private final ImagePanel imagePanel;
    private final ImageBuffer imageBuffer;
    private BufferedImage originalImage;
    private Transformed.DCTResult dctResult;
    private Transformed transformer = new Transformed();
    private final Random random = new Random();
    private static final int NOISE_COUNT = 100;   // Quantidade de ruídos
    private static final int NOISE_RADIUS = 50;   // Raio da área circular
    int optInterpolation = 0;
    int optimalThreshold = 0;
    int size = 10000;
    //RandomPositions randomPositions = new RandomPositions();
    int vetX[];
    int vetY[];
    
    
    
    /**
     * Creates new form dpiGUI
     */
    public dpiGUI() {
            
        initComponents();
        setLocationRelativeTo(null);

        mainPanel.setLayout(new CardLayout());
                
    
        imagePanel = new ImagePanel();
        jPanel1.setLayout(new BorderLayout());
        jPanel1.add(imagePanel, BorderLayout.CENTER);
        jPanel1.revalidate();
        jPanel1.repaint();
        
        mainPanel.add(ConvertToGray,"ConvertToGray");
        mainPanel.add(inversalPanel,"inversalPanel");
        mainPanel.add(jPanel1,"jPanel1");
        mainPanel.add(originaltoRGBPanel,"OriginalToRGB");
        mainPanel.add(picPixelsPanel,"picPixels");
        mainPanel.add(TenNoisesPanel,"TenNoises");
        mainPanel.add(EqualizationPanel,"Equalization");
        mainPanel.add(InterpolationPanel,"Interpolation");
        mainPanel.add(MeanMedianPanel,"MeanMedian");
        mainPanel.add(HighlightPanel,"Highlight");
        mainPanel.add(CosTransformedPanel,"Transformed");
        mainPanel.add(MinMaxMediumPointPanel,"minMax");
        mainPanel.add(ColoredImagePanel,"colored");
        mainPanel.add(otsuPanel,"otsu");
        mainPanel.add(ThinningPanel,"thinning");
        imageBuffer = new ImageBuffer();
        
        
    }

     
    private BufferedImage copyImage(BufferedImage source) {
        BufferedImage copy = new BufferedImage(source.getWidth(), source.getHeight(), source.getType());
        Graphics g = copy.getGraphics();
        g.drawImage(source, 0, 0, null);
        g.dispose();
        return copy;
}


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        mainPanel = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        picPixelsPanel = new javax.swing.JPanel();
        pixelsImagePanel = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        RGBTextField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        RvalueTextField = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        GvalueTextField = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        BvalueTextField = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        XTextField = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        YTextField = new javax.swing.JTextField();
        ConvertToGray = new javax.swing.JPanel();
        OriginalImagePanel = new javax.swing.JPanel();
        GrayImage = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButtonConverter = new javax.swing.JButton();
        getImageButton = new javax.swing.JButton();
        inversalPanel = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        originalGrayPanel = new javax.swing.JPanel();
        inversalGrayPanel = new javax.swing.JPanel();
        inversalButton = new javax.swing.JButton();
        getInversalButton = new javax.swing.JButton();
        originaltoRGBPanel = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        OriginalColorsPanel = new javax.swing.JPanel();
        RcolorPanel = new javax.swing.JPanel();
        GcolorPanel = new javax.swing.JPanel();
        BcolorPanel = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        TenNoisesPanel = new javax.swing.JPanel();
        originalPanel = new javax.swing.JPanel();
        firstPanel = new javax.swing.JPanel();
        secondPanel = new javax.swing.JPanel();
        thirdPanel = new javax.swing.JPanel();
        fourthPanel = new javax.swing.JPanel();
        fifithPanel = new javax.swing.JPanel();
        sixthPanel = new javax.swing.JPanel();
        seventhPanel = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        eighthPanel = new javax.swing.JPanel();
        jScrollBar1 = new javax.swing.JScrollBar();
        EqualizationPanel = new javax.swing.JPanel();
        notEqualizadePanel = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        EqualizedPanel = new javax.swing.JPanel();
        getEqualizadedButton = new javax.swing.JButton();
        InterpolationPanel = new javax.swing.JPanel();
        notInterpoledPanel = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        InterpoledPanel = new javax.swing.JPanel();
        heightInterpolationText = new javax.swing.JTextField();
        widthInterpolationText = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        getInterpoledButton = new javax.swing.JButton();
        MeanMedianPanel = new javax.swing.JPanel();
        jButton7 = new javax.swing.JButton();
        notFilterPanel = new javax.swing.JPanel();
        jButton8 = new javax.swing.JButton();
        FilterPanel = new javax.swing.JPanel();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton19 = new javax.swing.JButton();
        HighlightPanel = new javax.swing.JPanel();
        notHighlightPanel = new javax.swing.JPanel();
        jButton11 = new javax.swing.JButton();
        HighlitedPanel = new javax.swing.JPanel();
        thresholdTextField = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        jButton17 = new javax.swing.JButton();
        xTextField = new javax.swing.JTextField();
        yTextField = new javax.swing.JTextField();
        mTextField = new javax.swing.JTextField();
        xLabel = new javax.swing.JLabel();
        yLabel = new javax.swing.JLabel();
        mLabel = new javax.swing.JLabel();
        jButton18 = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        cTextField = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        gammaTextField = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        CosTransformedPanel = new javax.swing.JPanel();
        notTransformedPanel = new javax.swing.JPanel();
        jButton20 = new javax.swing.JButton();
        jButton21 = new javax.swing.JButton();
        TransformedPanel = new javax.swing.JPanel();
        jButton22 = new javax.swing.JButton();
        jButton23 = new javax.swing.JButton();
        jButton24 = new javax.swing.JButton();
        LimiarTextField1 = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jAltasButton1 = new javax.swing.JRadioButton();
        jBaixasRadioButton2 = new javax.swing.JRadioButton();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        MinMaxMediumPointPanel = new javax.swing.JPanel();
        notMinMaxPanel = new javax.swing.JPanel();
        minMaxPanel = new javax.swing.JPanel();
        jButton25 = new javax.swing.JButton();
        jButton26 = new javax.swing.JButton();
        jButton27 = new javax.swing.JButton();
        jButton28 = new javax.swing.JButton();
        ColoredImagePanel = new javax.swing.JPanel();
        notColoredPanel = new javax.swing.JPanel();
        ColoredPanel = new javax.swing.JPanel();
        jButton29 = new javax.swing.JButton();
        jButton30 = new javax.swing.JButton();
        jButton31 = new javax.swing.JButton();
        otsuPanel = new javax.swing.JPanel();
        nototsuPanel = new javax.swing.JPanel();
        otsuApplyPanel = new javax.swing.JPanel();
        jButton32 = new javax.swing.JButton();
        jButton33 = new javax.swing.JButton();
        jButton34 = new javax.swing.JButton();
        AvisoLabel27 = new javax.swing.JLabel();
        ThinningPanel = new javax.swing.JPanel();
        notThinningPanel3 = new javax.swing.JPanel();
        thinningApplyPanel4 = new javax.swing.JPanel();
        jButton35 = new javax.swing.JButton();
        jButton36 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        toGrayMenu = new javax.swing.JMenuItem();
        grayToInversalMenu = new javax.swing.JMenuItem();
        separeteRGBMenu = new javax.swing.JMenuItem();
        foundPixelMenu = new javax.swing.JMenuItem();
        randonNoisesMenu = new javax.swing.JMenuItem();
        interpolationMenu = new javax.swing.JMenuItem();
        equalizationMenu = new javax.swing.JMenuItem();
        meanMedianMenu = new javax.swing.JMenuItem();
        highlightMenu = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1360, 720));
        getContentPane().setLayout(new java.awt.CardLayout());

        mainPanel.setMaximumSize(new java.awt.Dimension(400, 200));
        mainPanel.setMinimumSize(new java.awt.Dimension(400, 200));
        mainPanel.setPreferredSize(new java.awt.Dimension(400, 200));

        jPanel2.setMaximumSize(new java.awt.Dimension(400, 200));
        jPanel2.setMinimumSize(new java.awt.Dimension(400, 200));
        jPanel2.setPreferredSize(new java.awt.Dimension(400, 200));

        jLabel3.setText("Bem Vindo ao Programa de Processamento Digital De Imagem, Selecione as opções Desejadas no Menu.");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 697, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(120, 120, 120)
                .addComponent(jLabel3)
                .addContainerGap(913, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 1539, Short.MAX_VALUE)
                .addContainerGap())
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 1049, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(mainPanel, "card2");

        pixelsImagePanel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                pixelsImagePanelMouseDragged(evt);
            }
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                pixelsImagePanelMouseMoved(evt);
            }
        });
        pixelsImagePanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pixelsImagePanelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pixelsImagePanelLayout = new javax.swing.GroupLayout(pixelsImagePanel);
        pixelsImagePanel.setLayout(pixelsImagePanelLayout);
        pixelsImagePanelLayout.setHorizontalGroup(
            pixelsImagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 287, Short.MAX_VALUE)
        );
        pixelsImagePanelLayout.setVerticalGroup(
            pixelsImagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 288, Short.MAX_VALUE)
        );

        jLabel9.setText("Valor RGB");

        jLabel10.setText("Valor de R");

        jLabel11.setText("Valor de G");

        jLabel12.setText("Valor de B");

        jLabel13.setText("Coordenadas");

        jLabel14.setText("X: ");

        jLabel15.setText("Y: ");

        javax.swing.GroupLayout picPixelsPanelLayout = new javax.swing.GroupLayout(picPixelsPanel);
        picPixelsPanel.setLayout(picPixelsPanelLayout);
        picPixelsPanelLayout.setHorizontalGroup(
            picPixelsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(picPixelsPanelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(pixelsImagePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(78, 78, 78)
                .addGroup(picPixelsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addGroup(picPixelsPanelLayout.createSequentialGroup()
                        .addGroup(picPixelsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(picPixelsPanelLayout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(XTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel15))
                            .addGroup(picPixelsPanelLayout.createSequentialGroup()
                                .addGroup(picPixelsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(RGBTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(picPixelsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10)
                                    .addComponent(RvalueTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(picPixelsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(picPixelsPanelLayout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addGroup(picPixelsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11)
                                    .addComponent(GvalueTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(picPixelsPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(YTextField)))
                        .addGap(18, 18, 18)
                        .addGroup(picPixelsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(BvalueTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(787, Short.MAX_VALUE))
        );
        picPixelsPanelLayout.setVerticalGroup(
            picPixelsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(picPixelsPanelLayout.createSequentialGroup()
                .addGroup(picPixelsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(picPixelsPanelLayout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(pixelsImagePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(picPixelsPanelLayout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addGroup(picPixelsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(picPixelsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(RGBTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(RvalueTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(GvalueTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BvalueTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel13)
                        .addGap(18, 18, 18)
                        .addGroup(picPixelsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(XTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15)
                            .addComponent(YTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(730, Short.MAX_VALUE))
        );

        getContentPane().add(picPixelsPanel, "card7");

        javax.swing.GroupLayout OriginalImagePanelLayout = new javax.swing.GroupLayout(OriginalImagePanel);
        OriginalImagePanel.setLayout(OriginalImagePanelLayout);
        OriginalImagePanelLayout.setHorizontalGroup(
            OriginalImagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        OriginalImagePanelLayout.setVerticalGroup(
            OriginalImagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 315, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout GrayImageLayout = new javax.swing.GroupLayout(GrayImage);
        GrayImage.setLayout(GrayImageLayout);
        GrayImageLayout.setHorizontalGroup(
            GrayImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 249, Short.MAX_VALUE)
        );
        GrayImageLayout.setVerticalGroup(
            GrayImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jLabel1.setText("Imagem Original");

        jLabel2.setText("Imagem Apos Conversão");

        jButtonConverter.setText("Converter");
        jButtonConverter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConverterActionPerformed(evt);
            }
        });

        getImageButton.setText("Obter Imagem");
        getImageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getImageButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ConvertToGrayLayout = new javax.swing.GroupLayout(ConvertToGray);
        ConvertToGray.setLayout(ConvertToGrayLayout);
        ConvertToGrayLayout.setHorizontalGroup(
            ConvertToGrayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ConvertToGrayLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(ConvertToGrayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE)
                    .addComponent(OriginalImagePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(ConvertToGrayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ConvertToGrayLayout.createSequentialGroup()
                        .addGroup(ConvertToGrayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ConvertToGrayLayout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(jButtonConverter, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(ConvertToGrayLayout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addComponent(getImageButton)))
                        .addGap(36, 36, 36)
                        .addComponent(GrayImage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ConvertToGrayLayout.createSequentialGroup()
                        .addGap(253, 253, 253)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(757, Short.MAX_VALUE))
        );
        ConvertToGrayLayout.setVerticalGroup(
            ConvertToGrayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ConvertToGrayLayout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(ConvertToGrayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1))
                .addGroup(ConvertToGrayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ConvertToGrayLayout.createSequentialGroup()
                        .addGap(156, 156, 156)
                        .addComponent(jButtonConverter)
                        .addGap(41, 41, 41)
                        .addComponent(getImageButton))
                    .addGroup(ConvertToGrayLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(ConvertToGrayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(OriginalImagePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(GrayImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(667, Short.MAX_VALUE))
        );

        getContentPane().add(ConvertToGray, "card3");

        jLabel4.setText("Original Cinza");

        jLabel5.setText("Inversa ");

        javax.swing.GroupLayout originalGrayPanelLayout = new javax.swing.GroupLayout(originalGrayPanel);
        originalGrayPanel.setLayout(originalGrayPanelLayout);
        originalGrayPanelLayout.setHorizontalGroup(
            originalGrayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        originalGrayPanelLayout.setVerticalGroup(
            originalGrayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout inversalGrayPanelLayout = new javax.swing.GroupLayout(inversalGrayPanel);
        inversalGrayPanel.setLayout(inversalGrayPanelLayout);
        inversalGrayPanelLayout.setHorizontalGroup(
            inversalGrayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
        inversalGrayPanelLayout.setVerticalGroup(
            inversalGrayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 237, Short.MAX_VALUE)
        );

        inversalButton.setText("Inverter");
        inversalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inversalButtonActionPerformed(evt);
            }
        });

        getInversalButton.setText("Obter a Imagem");
        getInversalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getInversalButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout inversalPanelLayout = new javax.swing.GroupLayout(inversalPanel);
        inversalPanel.setLayout(inversalPanelLayout);
        inversalPanelLayout.setHorizontalGroup(
            inversalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inversalPanelLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(inversalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE)
                    .addComponent(originalGrayPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(inversalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(inversalButton, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                    .addComponent(getInversalButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(23, 23, 23)
                .addGroup(inversalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inversalGrayPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(812, Short.MAX_VALUE))
        );
        inversalPanelLayout.setVerticalGroup(
            inversalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inversalPanelLayout.createSequentialGroup()
                .addGroup(inversalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(inversalPanelLayout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addGroup(inversalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(inversalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(inversalGrayPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(originalGrayPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(inversalPanelLayout.createSequentialGroup()
                        .addGap(162, 162, 162)
                        .addComponent(inversalButton)
                        .addGap(18, 18, 18)
                        .addComponent(getInversalButton)))
                .addContainerGap(734, Short.MAX_VALUE))
        );

        getContentPane().add(inversalPanel, "card5");

        jButton1.setText("Separar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout OriginalColorsPanelLayout = new javax.swing.GroupLayout(OriginalColorsPanel);
        OriginalColorsPanel.setLayout(OriginalColorsPanelLayout);
        OriginalColorsPanelLayout.setHorizontalGroup(
            OriginalColorsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 250, Short.MAX_VALUE)
        );
        OriginalColorsPanelLayout.setVerticalGroup(
            OriginalColorsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 250, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout RcolorPanelLayout = new javax.swing.GroupLayout(RcolorPanel);
        RcolorPanel.setLayout(RcolorPanelLayout);
        RcolorPanelLayout.setHorizontalGroup(
            RcolorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 250, Short.MAX_VALUE)
        );
        RcolorPanelLayout.setVerticalGroup(
            RcolorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 251, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout GcolorPanelLayout = new javax.swing.GroupLayout(GcolorPanel);
        GcolorPanel.setLayout(GcolorPanelLayout);
        GcolorPanelLayout.setHorizontalGroup(
            GcolorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 249, Short.MAX_VALUE)
        );
        GcolorPanelLayout.setVerticalGroup(
            GcolorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 250, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout BcolorPanelLayout = new javax.swing.GroupLayout(BcolorPanel);
        BcolorPanel.setLayout(BcolorPanelLayout);
        BcolorPanelLayout.setHorizontalGroup(
            BcolorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 249, Short.MAX_VALUE)
        );
        BcolorPanelLayout.setVerticalGroup(
            BcolorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 250, Short.MAX_VALUE)
        );

        jLabel6.setText("CANAL R");

        jLabel7.setText("CANAL G");

        jLabel8.setText("CANAL B");

        javax.swing.GroupLayout originaltoRGBPanelLayout = new javax.swing.GroupLayout(originaltoRGBPanel);
        originaltoRGBPanel.setLayout(originaltoRGBPanelLayout);
        originaltoRGBPanelLayout.setHorizontalGroup(
            originaltoRGBPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(originaltoRGBPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(originaltoRGBPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(OriginalColorsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(originaltoRGBPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel8)
                        .addComponent(BcolorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addGap(34, 34, 34)
                .addGroup(originaltoRGBPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(RcolorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(originaltoRGBPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(GcolorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        originaltoRGBPanelLayout.setVerticalGroup(
            originaltoRGBPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, originaltoRGBPanelLayout.createSequentialGroup()
                .addGroup(originaltoRGBPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(originaltoRGBPanelLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(OriginalColorsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(originaltoRGBPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(originaltoRGBPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(originaltoRGBPanelLayout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(RcolorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(originaltoRGBPanelLayout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGroup(originaltoRGBPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(originaltoRGBPanelLayout.createSequentialGroup()
                                        .addGap(132, 132, 132)
                                        .addComponent(jButton1))
                                    .addGroup(originaltoRGBPanelLayout.createSequentialGroup()
                                        .addGap(11, 11, 11)
                                        .addComponent(GcolorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(1, 1, 1)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BcolorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getContentPane().add(originaltoRGBPanel, "card6");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1551, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1061, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1, "card3");

        javax.swing.GroupLayout originalPanelLayout = new javax.swing.GroupLayout(originalPanel);
        originalPanel.setLayout(originalPanelLayout);
        originalPanelLayout.setHorizontalGroup(
            originalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 200, Short.MAX_VALUE)
        );
        originalPanelLayout.setVerticalGroup(
            originalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 200, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout firstPanelLayout = new javax.swing.GroupLayout(firstPanel);
        firstPanel.setLayout(firstPanelLayout);
        firstPanelLayout.setHorizontalGroup(
            firstPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 200, Short.MAX_VALUE)
        );
        firstPanelLayout.setVerticalGroup(
            firstPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout secondPanelLayout = new javax.swing.GroupLayout(secondPanel);
        secondPanel.setLayout(secondPanelLayout);
        secondPanelLayout.setHorizontalGroup(
            secondPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 200, Short.MAX_VALUE)
        );
        secondPanelLayout.setVerticalGroup(
            secondPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout thirdPanelLayout = new javax.swing.GroupLayout(thirdPanel);
        thirdPanel.setLayout(thirdPanelLayout);
        thirdPanelLayout.setHorizontalGroup(
            thirdPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 200, Short.MAX_VALUE)
        );
        thirdPanelLayout.setVerticalGroup(
            thirdPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 200, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout fourthPanelLayout = new javax.swing.GroupLayout(fourthPanel);
        fourthPanel.setLayout(fourthPanelLayout);
        fourthPanelLayout.setHorizontalGroup(
            fourthPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 200, Short.MAX_VALUE)
        );
        fourthPanelLayout.setVerticalGroup(
            fourthPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 200, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout fifithPanelLayout = new javax.swing.GroupLayout(fifithPanel);
        fifithPanel.setLayout(fifithPanelLayout);
        fifithPanelLayout.setHorizontalGroup(
            fifithPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 200, Short.MAX_VALUE)
        );
        fifithPanelLayout.setVerticalGroup(
            fifithPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 200, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout sixthPanelLayout = new javax.swing.GroupLayout(sixthPanel);
        sixthPanel.setLayout(sixthPanelLayout);
        sixthPanelLayout.setHorizontalGroup(
            sixthPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 200, Short.MAX_VALUE)
        );
        sixthPanelLayout.setVerticalGroup(
            sixthPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout seventhPanelLayout = new javax.swing.GroupLayout(seventhPanel);
        seventhPanel.setLayout(seventhPanelLayout);
        seventhPanelLayout.setHorizontalGroup(
            seventhPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 201, Short.MAX_VALUE)
        );
        seventhPanelLayout.setVerticalGroup(
            seventhPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jButton2.setText("Gerar Imagens");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Aplicar Filtro");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout eighthPanelLayout = new javax.swing.GroupLayout(eighthPanel);
        eighthPanel.setLayout(eighthPanelLayout);
        eighthPanelLayout.setHorizontalGroup(
            eighthPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 200, Short.MAX_VALUE)
        );
        eighthPanelLayout.setVerticalGroup(
            eighthPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout TenNoisesPanelLayout = new javax.swing.GroupLayout(TenNoisesPanel);
        TenNoisesPanel.setLayout(TenNoisesPanelLayout);
        TenNoisesPanelLayout.setHorizontalGroup(
            TenNoisesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TenNoisesPanelLayout.createSequentialGroup()
                .addGroup(TenNoisesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(TenNoisesPanelLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(fifithPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(TenNoisesPanelLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(originalPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(TenNoisesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(TenNoisesPanelLayout.createSequentialGroup()
                        .addGroup(TenNoisesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(secondPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(thirdPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(fourthPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(TenNoisesPanelLayout.createSequentialGroup()
                        .addComponent(sixthPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(firstPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(seventhPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(eighthPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 439, Short.MAX_VALUE))))
            .addGroup(TenNoisesPanelLayout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(jScrollBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 517, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        TenNoisesPanelLayout.setVerticalGroup(
            TenNoisesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TenNoisesPanelLayout.createSequentialGroup()
                .addGroup(TenNoisesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(TenNoisesPanelLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(TenNoisesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(thirdPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fourthPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(TenNoisesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(originalPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(secondPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(TenNoisesPanelLayout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(jButton2)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3)))
                .addGap(32, 32, 32)
                .addGroup(TenNoisesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(fifithPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sixthPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(firstPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(seventhPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(eighthPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(541, Short.MAX_VALUE))
        );

        getContentPane().add(TenNoisesPanel, "card8");

        javax.swing.GroupLayout notEqualizadePanelLayout = new javax.swing.GroupLayout(notEqualizadePanel);
        notEqualizadePanel.setLayout(notEqualizadePanelLayout);
        notEqualizadePanelLayout.setHorizontalGroup(
            notEqualizadePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
        notEqualizadePanelLayout.setVerticalGroup(
            notEqualizadePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        jButton4.setText("Equalizar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout EqualizedPanelLayout = new javax.swing.GroupLayout(EqualizedPanel);
        EqualizedPanel.setLayout(EqualizedPanelLayout);
        EqualizedPanelLayout.setHorizontalGroup(
            EqualizedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 299, Short.MAX_VALUE)
        );
        EqualizedPanelLayout.setVerticalGroup(
            EqualizedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 302, Short.MAX_VALUE)
        );

        getEqualizadedButton.setText("Obter Equalização");
        getEqualizadedButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getEqualizadedButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout EqualizationPanelLayout = new javax.swing.GroupLayout(EqualizationPanel);
        EqualizationPanel.setLayout(EqualizationPanelLayout);
        EqualizationPanelLayout.setHorizontalGroup(
            EqualizationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EqualizationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(notEqualizadePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(EqualizationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(EqualizationPanelLayout.createSequentialGroup()
                        .addComponent(getEqualizadedButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EqualizationPanelLayout.createSequentialGroup()
                        .addComponent(jButton4)
                        .addGap(30, 30, 30)))
                .addComponent(EqualizedPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(797, Short.MAX_VALUE))
        );
        EqualizationPanelLayout.setVerticalGroup(
            EqualizationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EqualizationPanelLayout.createSequentialGroup()
                .addGroup(EqualizationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(EqualizationPanelLayout.createSequentialGroup()
                        .addGap(140, 140, 140)
                        .addComponent(jButton4)
                        .addGap(18, 18, 18)
                        .addComponent(getEqualizadedButton))
                    .addGroup(EqualizationPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(EqualizationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(EqualizedPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(notEqualizadePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(753, Short.MAX_VALUE))
        );

        getContentPane().add(EqualizationPanel, "card9");

        javax.swing.GroupLayout notInterpoledPanelLayout = new javax.swing.GroupLayout(notInterpoledPanel);
        notInterpoledPanel.setLayout(notInterpoledPanelLayout);
        notInterpoledPanelLayout.setHorizontalGroup(
            notInterpoledPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 204, Short.MAX_VALUE)
        );
        notInterpoledPanelLayout.setVerticalGroup(
            notInterpoledPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 206, Short.MAX_VALUE)
        );

        jButton5.setText("Interpolação NN");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout InterpoledPanelLayout = new javax.swing.GroupLayout(InterpoledPanel);
        InterpoledPanel.setLayout(InterpoledPanelLayout);
        InterpoledPanelLayout.setHorizontalGroup(
            InterpoledPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 167, Short.MAX_VALUE)
        );
        InterpoledPanelLayout.setVerticalGroup(
            InterpoledPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jLabel16.setText("Altura");

        jLabel17.setText("Largura");

        jButton6.setText("Interpolação Bilinear");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        getInterpoledButton.setText("Obter Imagem");
        getInterpoledButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getInterpoledButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout InterpolationPanelLayout = new javax.swing.GroupLayout(InterpolationPanel);
        InterpolationPanel.setLayout(InterpolationPanelLayout);
        InterpolationPanelLayout.setHorizontalGroup(
            InterpolationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InterpolationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(notInterpoledPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(InterpolationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(getInterpoledButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel16)
                    .addComponent(jLabel17)
                    .addComponent(widthInterpolationText)
                    .addComponent(heightInterpolationText)
                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(InterpoledPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(1018, Short.MAX_VALUE))
        );
        InterpolationPanelLayout.setVerticalGroup(
            InterpolationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InterpolationPanelLayout.createSequentialGroup()
                .addGroup(InterpolationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(InterpolationPanelLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(InterpolationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(notInterpoledPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(InterpoledPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(InterpolationPanelLayout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(heightInterpolationText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel17)
                        .addGap(8, 8, 8)
                        .addComponent(widthInterpolationText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(jButton5)
                        .addGap(18, 18, 18)
                        .addComponent(jButton6)))
                .addGap(18, 18, 18)
                .addComponent(getInterpoledButton)
                .addContainerGap(788, Short.MAX_VALUE))
        );

        getContentPane().add(InterpolationPanel, "card10");

        jButton7.setText("Aplicar Ruído");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout notFilterPanelLayout = new javax.swing.GroupLayout(notFilterPanel);
        notFilterPanel.setLayout(notFilterPanelLayout);
        notFilterPanelLayout.setHorizontalGroup(
            notFilterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 419, Short.MAX_VALUE)
        );
        notFilterPanelLayout.setVerticalGroup(
            notFilterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        jButton8.setText("Aplicar Media 3x3");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout FilterPanelLayout = new javax.swing.GroupLayout(FilterPanel);
        FilterPanel.setLayout(FilterPanelLayout);
        FilterPanelLayout.setHorizontalGroup(
            FilterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
        FilterPanelLayout.setVerticalGroup(
            FilterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        jButton9.setText("Aplicar Media 9x9");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setText("Aplicar Filtro Mediana");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton19.setText("Obter Imagem");
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout MeanMedianPanelLayout = new javax.swing.GroupLayout(MeanMedianPanel);
        MeanMedianPanel.setLayout(MeanMedianPanelLayout);
        MeanMedianPanelLayout.setHorizontalGroup(
            MeanMedianPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MeanMedianPanelLayout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(notFilterPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(MeanMedianPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(FilterPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(599, Short.MAX_VALUE))
        );
        MeanMedianPanelLayout.setVerticalGroup(
            MeanMedianPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MeanMedianPanelLayout.createSequentialGroup()
                .addGroup(MeanMedianPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MeanMedianPanelLayout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addComponent(jButton7)
                        .addGap(18, 18, 18)
                        .addComponent(jButton8)
                        .addGap(18, 18, 18)
                        .addComponent(jButton9)
                        .addGap(26, 26, 26)
                        .addComponent(jButton10)
                        .addGap(27, 27, 27)
                        .addComponent(jButton19))
                    .addGroup(MeanMedianPanelLayout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(FilterPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(MeanMedianPanelLayout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(notFilterPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(698, Short.MAX_VALUE))
        );

        getContentPane().add(MeanMedianPanel, "card11");

        javax.swing.GroupLayout notHighlightPanelLayout = new javax.swing.GroupLayout(notHighlightPanel);
        notHighlightPanel.setLayout(notHighlightPanelLayout);
        notHighlightPanelLayout.setHorizontalGroup(
            notHighlightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
        notHighlightPanelLayout.setVerticalGroup(
            notHighlightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        jButton11.setText("Binzarizar");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        HighlitedPanel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                HighlitedPanelMouseMoved(evt);
            }
        });

        javax.swing.GroupLayout HighlitedPanelLayout = new javax.swing.GroupLayout(HighlitedPanel);
        HighlitedPanel.setLayout(HighlitedPanelLayout);
        HighlitedPanelLayout.setHorizontalGroup(
            HighlitedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
        HighlitedPanelLayout.setVerticalGroup(
            HighlitedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jLabel18.setText("Limiar ");

        jButton12.setText("Limiarização");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jButton13.setText("Laplaciano");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jButton14.setText("Laplaciano 9 pixels");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        jButton15.setText("Aplicar Laplaciano na Imagem");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        jButton16.setText("Obter Imagem");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        jButton17.setText("Sobel");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });

        xTextField.setEditable(false);

        yTextField.setEditable(false);

        mTextField.setEditable(false);

        xLabel.setText("Coordenada X");

        yLabel.setText("Coordenada Y");

        mLabel.setText("Magnitude");

        jButton18.setText("Compressão de Escala");
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });

        jLabel19.setText("---------------------------------------");

        jLabel20.setText("Valor de C");

        jLabel21.setText("Valor de Y");

        jLabel22.setText("---------------------------------------");

        javax.swing.GroupLayout HighlightPanelLayout = new javax.swing.GroupLayout(HighlightPanel);
        HighlightPanel.setLayout(HighlightPanelLayout);
        HighlightPanelLayout.setHorizontalGroup(
            HighlightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HighlightPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(notHighlightPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(HighlightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel18)
                    .addComponent(jButton12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(thresholdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HighlightPanelLayout.createSequentialGroup()
                        .addGroup(HighlightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel20)
                            .addComponent(cTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(HighlightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(HighlightPanelLayout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addComponent(jLabel21))
                            .addGroup(HighlightPanelLayout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(gammaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGroup(HighlightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(HighlightPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(HighlitedPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(HighlightPanelLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(HighlightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(xLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(xTextField))
                        .addGap(18, 18, 18)
                        .addGroup(HighlightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(yLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(yTextField))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(HighlightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mLabel)
                            .addComponent(mTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(726, Short.MAX_VALUE))
        );
        HighlightPanelLayout.setVerticalGroup(
            HighlightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HighlightPanelLayout.createSequentialGroup()
                .addGroup(HighlightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(HighlightPanelLayout.createSequentialGroup()
                        .addGap(85, 85, 85)
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(thresholdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton12)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                        .addComponent(jButton13)
                        .addGap(18, 18, 18)
                        .addComponent(jButton14))
                    .addGroup(HighlightPanelLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(HighlightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(notHighlightPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(HighlitedPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGroup(HighlightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(HighlightPanelLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(HighlightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(yLabel)
                            .addComponent(xLabel)
                            .addComponent(mLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(HighlightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(xTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(yTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HighlightPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton15)
                        .addGap(15, 15, 15)))
                .addComponent(jButton17)
                .addGap(5, 5, 5)
                .addComponent(jLabel22)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(HighlightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(jLabel21))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(HighlightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gammaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton18)
                .addGap(42, 42, 42)
                .addComponent(jButton16)
                .addContainerGap(492, Short.MAX_VALUE))
        );

        getContentPane().add(HighlightPanel, "card12");

        notTransformedPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                notTransformedPanelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout notTransformedPanelLayout = new javax.swing.GroupLayout(notTransformedPanel);
        notTransformedPanel.setLayout(notTransformedPanelLayout);
        notTransformedPanelLayout.setHorizontalGroup(
            notTransformedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 288, Short.MAX_VALUE)
        );
        notTransformedPanelLayout.setVerticalGroup(
            notTransformedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 279, Short.MAX_VALUE)
        );

        jButton20.setText("Aplicar Transormada");
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20ActionPerformed(evt);
            }
        });

        jButton21.setText("Obter Imagem");
        jButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton21ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout TransformedPanelLayout = new javax.swing.GroupLayout(TransformedPanel);
        TransformedPanel.setLayout(TransformedPanelLayout);
        TransformedPanelLayout.setHorizontalGroup(
            TransformedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 373, Short.MAX_VALUE)
        );
        TransformedPanelLayout.setVerticalGroup(
            TransformedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 279, Short.MAX_VALUE)
        );

        jButton22.setText("Aplicar inversa da DCT");
        jButton22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton22ActionPerformed(evt);
            }
        });

        jButton23.setText("Aplicar ruído");
        jButton23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton23ActionPerformed(evt);
            }
        });

        jButton24.setText("Aplicar Filtro");
        jButton24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton24ActionPerformed(evt);
            }
        });

        jLabel23.setText("Limiar");

        jLabel24.setText("Tipo de Filtro");

        jAltasButton1.setText("Passas Altas");
        jAltasButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAltasButton1ActionPerformed(evt);
            }
        });

        jBaixasRadioButton2.setText("Passas Baixas");
        jBaixasRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBaixasRadioButton2ActionPerformed(evt);
            }
        });

        jLabel25.setText("---------------------------------");

        jLabel26.setText("---------------------------------");

        javax.swing.GroupLayout CosTransformedPanelLayout = new javax.swing.GroupLayout(CosTransformedPanel);
        CosTransformedPanel.setLayout(CosTransformedPanelLayout);
        CosTransformedPanelLayout.setHorizontalGroup(
            CosTransformedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CosTransformedPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(notTransformedPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CosTransformedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CosTransformedPanelLayout.createSequentialGroup()
                        .addGroup(CosTransformedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(CosTransformedPanelLayout.createSequentialGroup()
                                .addComponent(jLabel23)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel24))
                            .addGroup(CosTransformedPanelLayout.createSequentialGroup()
                                .addGroup(CosTransformedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(CosTransformedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jButton20, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButton22, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButton23, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(jLabel26)
                                    .addComponent(jLabel25)
                                    .addGroup(CosTransformedPanelLayout.createSequentialGroup()
                                        .addGap(36, 36, 36)
                                        .addComponent(jButton24))
                                    .addGroup(CosTransformedPanelLayout.createSequentialGroup()
                                        .addComponent(LimiarTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(CosTransformedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jBaixasRadioButton2)
                                            .addComponent(jAltasButton1))))
                                .addGap(0, 4, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TransformedPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(698, Short.MAX_VALUE))
                    .addGroup(CosTransformedPanelLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jButton21, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        CosTransformedPanelLayout.setVerticalGroup(
            CosTransformedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CosTransformedPanelLayout.createSequentialGroup()
                .addGroup(CosTransformedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TransformedPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(CosTransformedPanelLayout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(notTransformedPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(CosTransformedPanelLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jButton20)
                        .addGap(18, 18, 18)
                        .addComponent(jButton22)
                        .addGap(18, 18, 18)
                        .addComponent(jButton23)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel26)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(CosTransformedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel24)
                            .addComponent(jLabel23, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(CosTransformedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jAltasButton1)
                            .addComponent(LimiarTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jBaixasRadioButton2)
                        .addGap(13, 13, 13)
                        .addComponent(jButton24)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel25)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton21)
                .addContainerGap(711, Short.MAX_VALUE))
        );

        getContentPane().add(CosTransformedPanel, "card13");

        javax.swing.GroupLayout notMinMaxPanelLayout = new javax.swing.GroupLayout(notMinMaxPanel);
        notMinMaxPanel.setLayout(notMinMaxPanelLayout);
        notMinMaxPanelLayout.setHorizontalGroup(
            notMinMaxPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 212, Short.MAX_VALUE)
        );
        notMinMaxPanelLayout.setVerticalGroup(
            notMinMaxPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 277, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout minMaxPanelLayout = new javax.swing.GroupLayout(minMaxPanel);
        minMaxPanel.setLayout(minMaxPanelLayout);
        minMaxPanelLayout.setHorizontalGroup(
            minMaxPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 282, Short.MAX_VALUE)
        );
        minMaxPanelLayout.setVerticalGroup(
            minMaxPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 250, Short.MAX_VALUE)
        );

        jButton25.setText("Mínimo");
        jButton25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton25ActionPerformed(evt);
            }
        });

        jButton26.setText("Máximo");
        jButton26.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton26ActionPerformed(evt);
            }
        });

        jButton27.setText("Ponto médio");
        jButton27.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton27ActionPerformed(evt);
            }
        });

        jButton28.setText("Obter Imagem");
        jButton28.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton28ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout MinMaxMediumPointPanelLayout = new javax.swing.GroupLayout(MinMaxMediumPointPanel);
        MinMaxMediumPointPanel.setLayout(MinMaxMediumPointPanelLayout);
        MinMaxMediumPointPanelLayout.setHorizontalGroup(
            MinMaxMediumPointPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MinMaxMediumPointPanelLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(notMinMaxPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(81, 81, 81)
                .addGroup(MinMaxMediumPointPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(148, 148, 148)
                .addComponent(minMaxPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(693, 693, 693))
        );
        MinMaxMediumPointPanelLayout.setVerticalGroup(
            MinMaxMediumPointPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MinMaxMediumPointPanelLayout.createSequentialGroup()
                .addGroup(MinMaxMediumPointPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MinMaxMediumPointPanelLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(MinMaxMediumPointPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(minMaxPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(notMinMaxPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(MinMaxMediumPointPanelLayout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addComponent(jButton25)
                        .addGap(18, 18, 18)
                        .addComponent(jButton26)
                        .addGap(18, 18, 18)
                        .addComponent(jButton27)
                        .addGap(27, 27, 27)
                        .addComponent(jButton28)))
                .addContainerGap(754, Short.MAX_VALUE))
        );

        getContentPane().add(MinMaxMediumPointPanel, "card14");

        javax.swing.GroupLayout notColoredPanelLayout = new javax.swing.GroupLayout(notColoredPanel);
        notColoredPanel.setLayout(notColoredPanelLayout);
        notColoredPanelLayout.setHorizontalGroup(
            notColoredPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 257, Short.MAX_VALUE)
        );
        notColoredPanelLayout.setVerticalGroup(
            notColoredPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 238, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout ColoredPanelLayout = new javax.swing.GroupLayout(ColoredPanel);
        ColoredPanel.setLayout(ColoredPanelLayout);
        ColoredPanelLayout.setHorizontalGroup(
            ColoredPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 243, Short.MAX_VALUE)
        );
        ColoredPanelLayout.setVerticalGroup(
            ColoredPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 223, Short.MAX_VALUE)
        );

        jButton29.setText("Aplicar Cor");
        jButton29.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton29ActionPerformed(evt);
            }
        });

        jButton30.setText("Obter Image");
        jButton30.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton30ActionPerformed(evt);
            }
        });

        jButton31.setText("Equalizaçao de Imagem com L do HSL ");
        jButton31.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton31ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ColoredImagePanelLayout = new javax.swing.GroupLayout(ColoredImagePanel);
        ColoredImagePanel.setLayout(ColoredImagePanelLayout);
        ColoredImagePanelLayout.setHorizontalGroup(
            ColoredImagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ColoredImagePanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(notColoredPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(ColoredImagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ColoredImagePanelLayout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addComponent(jButton31)
                        .addGap(64, 64, 64))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ColoredImagePanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ColoredImagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ColoredImagePanelLayout.createSequentialGroup()
                                .addComponent(jButton29, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(129, 129, 129))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ColoredImagePanelLayout.createSequentialGroup()
                                .addComponent(jButton30)
                                .addGap(132, 132, 132)))))
                .addComponent(ColoredPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(667, Short.MAX_VALUE))
        );
        ColoredImagePanelLayout.setVerticalGroup(
            ColoredImagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ColoredImagePanelLayout.createSequentialGroup()
                .addGroup(ColoredImagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ColoredPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(ColoredImagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(ColoredImagePanelLayout.createSequentialGroup()
                            .addGap(43, 43, 43)
                            .addComponent(notColoredPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(ColoredImagePanelLayout.createSequentialGroup()
                            .addGap(143, 143, 143)
                            .addComponent(jButton29)
                            .addGap(18, 18, 18)
                            .addComponent(jButton31)
                            .addGap(29, 29, 29)
                            .addComponent(jButton30))))
                .addContainerGap(780, Short.MAX_VALUE))
        );

        getContentPane().add(ColoredImagePanel, "card15");

        javax.swing.GroupLayout nototsuPanelLayout = new javax.swing.GroupLayout(nototsuPanel);
        nototsuPanel.setLayout(nototsuPanelLayout);
        nototsuPanelLayout.setHorizontalGroup(
            nototsuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 246, Short.MAX_VALUE)
        );
        nototsuPanelLayout.setVerticalGroup(
            nototsuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 241, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout otsuApplyPanelLayout = new javax.swing.GroupLayout(otsuApplyPanel);
        otsuApplyPanel.setLayout(otsuApplyPanelLayout);
        otsuApplyPanelLayout.setHorizontalGroup(
            otsuApplyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 247, Short.MAX_VALUE)
        );
        otsuApplyPanelLayout.setVerticalGroup(
            otsuApplyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 220, Short.MAX_VALUE)
        );

        jButton32.setText("Calcular OTSU");
        jButton32.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton32ActionPerformed(evt);
            }
        });

        jButton33.setText("Binarizar");
        jButton33.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton33ActionPerformed(evt);
            }
        });

        jButton34.setText("Limiarizar");
        jButton34.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton34ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout otsuPanelLayout = new javax.swing.GroupLayout(otsuPanel);
        otsuPanel.setLayout(otsuPanelLayout);
        otsuPanelLayout.setHorizontalGroup(
            otsuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(otsuPanelLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(nototsuPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addGroup(otsuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton32, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton33, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton34, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(AvisoLabel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(114, 114, 114)
                .addComponent(otsuApplyPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(746, Short.MAX_VALUE))
        );
        otsuPanelLayout.setVerticalGroup(
            otsuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(otsuPanelLayout.createSequentialGroup()
                .addGroup(otsuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(otsuPanelLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(otsuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(otsuApplyPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nototsuPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(otsuPanelLayout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addComponent(jButton32)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(AvisoLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(jButton33)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton34)))
                .addContainerGap(786, Short.MAX_VALUE))
        );

        getContentPane().add(otsuPanel, "card16");

        javax.swing.GroupLayout notThinningPanel3Layout = new javax.swing.GroupLayout(notThinningPanel3);
        notThinningPanel3.setLayout(notThinningPanel3Layout);
        notThinningPanel3Layout.setHorizontalGroup(
            notThinningPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 287, Short.MAX_VALUE)
        );
        notThinningPanel3Layout.setVerticalGroup(
            notThinningPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 255, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout thinningApplyPanel4Layout = new javax.swing.GroupLayout(thinningApplyPanel4);
        thinningApplyPanel4.setLayout(thinningApplyPanel4Layout);
        thinningApplyPanel4Layout.setHorizontalGroup(
            thinningApplyPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 315, Short.MAX_VALUE)
        );
        thinningApplyPanel4Layout.setVerticalGroup(
            thinningApplyPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 275, Short.MAX_VALUE)
        );

        jButton35.setText("Afinar Imagem");
        jButton35.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton35ActionPerformed(evt);
            }
        });

        jButton36.setText("Obter Imagem");
        jButton36.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton36ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ThinningPanelLayout = new javax.swing.GroupLayout(ThinningPanel);
        ThinningPanel.setLayout(ThinningPanelLayout);
        ThinningPanelLayout.setHorizontalGroup(
            ThinningPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ThinningPanelLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(notThinningPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(69, 69, 69)
                .addGroup(ThinningPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton35)
                    .addComponent(jButton36))
                .addGap(59, 59, 59)
                .addComponent(thinningApplyPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(685, Short.MAX_VALUE))
        );
        ThinningPanelLayout.setVerticalGroup(
            ThinningPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ThinningPanelLayout.createSequentialGroup()
                .addGroup(ThinningPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ThinningPanelLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(ThinningPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(thinningApplyPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(notThinningPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(ThinningPanelLayout.createSequentialGroup()
                        .addGap(97, 97, 97)
                        .addComponent(jButton35)
                        .addGap(61, 61, 61)
                        .addComponent(jButton36)))
                .addContainerGap(764, Short.MAX_VALUE))
        );

        getContentPane().add(ThinningPanel, "card17");

        jMenu2.setText("Conversor");

        jMenuItem2.setText("Abrir Conversor");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuBar1.add(jMenu2);

        jMenu1.setText("File");

        jMenuItem1.setText("Open");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu3.setText("Operações");

        toGrayMenu.setText("Conversor Para Cinza");
        toGrayMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toGrayMenuActionPerformed(evt);
            }
        });
        jMenu3.add(toGrayMenu);

        grayToInversalMenu.setText("Inverter o Cinza");
        grayToInversalMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                grayToInversalMenuActionPerformed(evt);
            }
        });
        jMenu3.add(grayToInversalMenu);

        separeteRGBMenu.setText("Separar os Canais ");
        separeteRGBMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                separeteRGBMenuActionPerformed(evt);
            }
        });
        jMenu3.add(separeteRGBMenu);

        foundPixelMenu.setText("Encontrar Pixels");
        foundPixelMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                foundPixelMenuActionPerformed(evt);
            }
        });
        jMenu3.add(foundPixelMenu);

        randonNoisesMenu.setText("Ruídos Randomicos");
        randonNoisesMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                randonNoisesMenuActionPerformed(evt);
            }
        });
        jMenu3.add(randonNoisesMenu);

        interpolationMenu.setText("Interpolação 2-Métodos");
        interpolationMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                interpolationMenuActionPerformed(evt);
            }
        });
        jMenu3.add(interpolationMenu);

        equalizationMenu.setText("Equalização");
        equalizationMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                equalizationMenuActionPerformed(evt);
            }
        });
        jMenu3.add(equalizationMenu);

        meanMedianMenu.setText("Filtro Media e Mediana");
        meanMedianMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                meanMedianMenuActionPerformed(evt);
            }
        });
        jMenu3.add(meanMedianMenu);

        highlightMenu.setText("Realce no Espaço");
        highlightMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                highlightMenuActionPerformed(evt);
            }
        });
        jMenu3.add(highlightMenu);

        jMenuBar1.add(jMenu3);

        jMenu4.setText("Operações 2 Bimestre");

        jMenuItem3.setText("Transformada Discreta do Cosseno");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem3);

        jMenuItem4.setText("Min/Max/Ponto médio");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem4);

        jMenuItem5.setText("Colorir Image E EQUALIZAÇÃO");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem5);

        jMenuItem6.setText("OTSU");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem6);

        jMenuItem7.setText("Esqueleto");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem7);

        jMenuBar1.add(jMenu4);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        
        imagePanel.clearImage();
        originalImage = null;
        imageBuffer.clear();
        
        CardLayout cardLayout =  (CardLayout) mainPanel.getLayout();
        cardLayout.show(mainPanel,"jPanel1");
        
        
        
        
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Imagens", "jpg","png","bmp");
        
        String userHome = System.getProperty("user.dir");
        File downloadsDir = new File(userHome, "ImagensPDI");
        JFileChooser JFCimage = new JFileChooser(downloadsDir);
        
        JFCimage.setFileSelectionMode(JFileChooser.FILES_ONLY);
        JFCimage.setAcceptAllFileFilterUsed(false);
        JFCimage.addChoosableFileFilter(filter);    

        if(JFCimage.showOpenDialog(this) == JFileChooser.APPROVE_OPTION){
            File file = JFCimage.getSelectedFile();
            
            try {
                originalImage = ImageIO.read(file);
                
                imageBuffer.setImage(originalImage);
                
                imagePanel.setImage(originalImage);
                imagePanel.revalidate();
                
                jPanel1.setLayout(new BorderLayout());
                jPanel1.add(imagePanel, BorderLayout.CENTER);
                
                imagePanel.repaint();
                pack();
              
            } catch (IOException ex) {
                Logger.getLogger(dpiGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void toGrayMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toGrayMenuActionPerformed
        // TODO add your handling code here:
        CardLayout cardLayout =  (CardLayout) mainPanel.getLayout();
        cardLayout.show(mainPanel,"ConvertToGray");
            ImagePanel OriginalPanel = new ImagePanel();
            
            OriginalImagePanel.removeAll();
            GrayImage.removeAll();
            OriginalPanel.setImage(originalImage);
            OriginalImagePanel.setLayout(new BorderLayout());
            OriginalImagePanel.add(OriginalPanel, BorderLayout.CENTER);
            OriginalImagePanel.revalidate();
            OriginalImagePanel.repaint();
        
    }//GEN-LAST:event_toGrayMenuActionPerformed

    private void jButtonConverterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConverterActionPerformed
        // TODO add your handling code here:
        
        
        BufferedImage img = imageBuffer.getImage();
        
        
        if(img != null){
            
            BufferedImage copyImage = copyImage(originalImage);
            ColorToGray RGBtoGray = new ColorToGray();
            
            BufferedImage grayImage = RGBtoGray.toGray(copyImage);
            
            ImagePanel grayImagePanel = new ImagePanel();
            grayImagePanel.setImage(grayImage);
            GrayImage.removeAll();
            GrayImage.setLayout(new BorderLayout());
            GrayImage.add(grayImagePanel, BorderLayout.CENTER);
            GrayImage.revalidate();
            GrayImage.repaint();
        }
    }//GEN-LAST:event_jButtonConverterActionPerformed

    private void grayToInversalMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_grayToInversalMenuActionPerformed
        // TODO add your handling code here:
        CardLayout cardLayout =  (CardLayout) mainPanel.getLayout();
        cardLayout.show(mainPanel,"inversalPanel");
            
            ImagePanel grayOriginalPanel = new ImagePanel();
            grayOriginalPanel.setImage(originalImage);
            originalGrayPanel.removeAll();
            inversalGrayPanel.removeAll();
            originalGrayPanel.setLayout(new BorderLayout());
            originalGrayPanel.add(grayOriginalPanel, BorderLayout.CENTER);
            originalGrayPanel.revalidate();
            originalGrayPanel.repaint();
        
        
        
        
    }//GEN-LAST:event_grayToInversalMenuActionPerformed

    private void getImageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getImageButtonActionPerformed
        // TODO add your handling code here:
        
        ImagePanel getImg = new ImagePanel();
        originalImage = getImg.panelToBufferedImage(GrayImage);
        getImg.setImage(originalImage);
        OriginalImagePanel.removeAll();
        OriginalImagePanel.setLayout(new BorderLayout());
        OriginalImagePanel.add(getImg, BorderLayout.CENTER);
        OriginalImagePanel.revalidate();
        OriginalImagePanel.repaint();
        
    }//GEN-LAST:event_getImageButtonActionPerformed

    private void inversalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inversalButtonActionPerformed
        // TODO add your handling code here:
        
        BufferedImage img = imageBuffer.getImage();
        
        
        if(img != null){
            
            BufferedImage copyImage = copyImage(originalImage);
            GrayToInversal graytoInversal = new GrayToInversal();
            
            BufferedImage inversalGray = graytoInversal.toInversal(copyImage);
            
            ImagePanel inversalPanel = new ImagePanel();
            inversalPanel.setImage(inversalGray);
            inversalGrayPanel.removeAll();
            inversalGrayPanel.setLayout(new BorderLayout());
            inversalGrayPanel.add(inversalPanel, BorderLayout.CENTER);
            inversalGrayPanel.revalidate();
            inversalGrayPanel.repaint();
        }
        
        
    }//GEN-LAST:event_inversalButtonActionPerformed

    private void getInversalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getInversalButtonActionPerformed
        // TODO add your handling code here:
        
       ImagePanel getImg = new ImagePanel();
       originalImage = getImg.panelToBufferedImage(inversalGrayPanel);
       getImg.setImage(originalImage);
       originalGrayPanel.removeAll();
       originalGrayPanel.setLayout(new BorderLayout());
       originalGrayPanel.add(getImg, BorderLayout.CENTER);
       originalGrayPanel.revalidate();
       originalGrayPanel.repaint();
       
    }//GEN-LAST:event_getInversalButtonActionPerformed

    private void separeteRGBMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_separeteRGBMenuActionPerformed
        // TODO add your handling code here:
        
        CardLayout cardLayout =  (CardLayout) mainPanel.getLayout();
        cardLayout.show(mainPanel,"OriginalToRGB");
        
        
            ImagePanel originalPanelRGB = new ImagePanel();
            originalPanelRGB.setImage(originalImage);
            originalPanelRGB.removeAll();
            OriginalColorsPanel.removeAll();
            RcolorPanel.removeAll();
            GcolorPanel.removeAll();
            BcolorPanel.removeAll();
            OriginalColorsPanel.setLayout(new BorderLayout());
            OriginalColorsPanel.add(originalPanelRGB, BorderLayout.CENTER);
            OriginalColorsPanel.revalidate();
            OriginalColorsPanel.repaint();
    }//GEN-LAST:event_separeteRGBMenuActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        SeparateRGB sprRGB = new SeparateRGB();
        BufferedImage redImage = sprRGB.separateColor(originalImage, 1);
        
        ImagePanel rPanel = new ImagePanel();
        rPanel.setImage(redImage);
        RcolorPanel.removeAll();
        RcolorPanel.setLayout(new BorderLayout());
        RcolorPanel.add(rPanel, BorderLayout.CENTER);
        RcolorPanel.revalidate();
        RcolorPanel.repaint();
        
        BufferedImage greenImage = sprRGB.separateColor(originalImage, 2);
        
        ImagePanel gPanel = new ImagePanel();
        gPanel.setImage(greenImage);
        GcolorPanel.removeAll();
        GcolorPanel.setLayout(new BorderLayout());
        GcolorPanel.add(gPanel, BorderLayout.CENTER);
        GcolorPanel.revalidate();
        GcolorPanel.repaint();
        
        BufferedImage blueImage = sprRGB.separateColor(originalImage, 3);
        
        ImagePanel bPanel = new ImagePanel();
        bPanel.setImage(blueImage);
        BcolorPanel.removeAll();
        BcolorPanel.setLayout(new BorderLayout());
        BcolorPanel.add(bPanel, BorderLayout.CENTER);
        BcolorPanel.revalidate();
        BcolorPanel.repaint();
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void foundPixelMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_foundPixelMenuActionPerformed
        // TODO add your handling code here:
        CardLayout cardLayout =  (CardLayout) mainPanel.getLayout();
        cardLayout.show(mainPanel,"picPixels");
        
        RandomPositions randomPositions = new RandomPositions();
        vetX = randomPositions.randomPointsX(originalImage,size);
        vetY = randomPositions.randomPointsY(originalImage,size);
        
        ImagePanel pixelPanel = new ImagePanel();
        pixelPanel.setImage(originalImage);
        pixelsImagePanel.removeAll();
        pixelsImagePanel.setLayout(new BorderLayout());
        pixelsImagePanel.add(pixelPanel, BorderLayout.CENTER);
        pixelsImagePanel.revalidate();
        pixelsImagePanel.repaint();
 
        
        
        
    }//GEN-LAST:event_foundPixelMenuActionPerformed

    private void pixelsImagePanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pixelsImagePanelMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_pixelsImagePanelMouseClicked

    private void pixelsImagePanelMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pixelsImagePanelMouseDragged
        // TODO add your handling code here:
    }//GEN-LAST:event_pixelsImagePanelMouseDragged

    private void pixelsImagePanelMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pixelsImagePanelMouseMoved
        // TODO add your handling code here:
        
        int x = evt.getX();
        int y = evt.getY();
        String strX = Integer.toString(x);
        String strY = Integer.toString(y);
       
        
        for(int i = 0; i < size; i++){
            
            if(vetX[i] == x && vetY[i] == y){
                int rgb = originalImage.getRGB(x, y);
                int r = (rgb >> 16) & 0xFF;
                int g = (rgb >> 8) & 0xFF;
                int b = rgb & 0xFF;
                String strRGB = Integer.toString(rgb);
                String strR = Integer.toString(r);
                String strG = Integer.toString(g);
                String strB = Integer.toString(b);
                RGBTextField.setText(strRGB);
                RvalueTextField.setText(strR);
                GvalueTextField.setText(strG);
                BvalueTextField.setText(strB);
                XTextField.setText(strX);
                YTextField.setText(strY);
                
            }
        }
    }//GEN-LAST:event_pixelsImagePanelMouseMoved

    private void randonNoisesMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_randonNoisesMenuActionPerformed
        // TODO add your handling code here:
        CardLayout cardLayout =  (CardLayout) mainPanel.getLayout();
        cardLayout.show(mainPanel,"TenNoises");
        
        
            ImagePanel originalPanelTen = new ImagePanel();
            originalPanelTen.setImage(originalImage);
            originalPanelTen.removeAll(); //test
            originalPanel.removeAll();
            firstPanel.removeAll();
            secondPanel.removeAll();
            thirdPanel.removeAll();
            fourthPanel.removeAll();
            fifithPanel.removeAll();
            sixthPanel.removeAll();
            seventhPanel.removeAll();
            eighthPanel.removeAll();
            
            originalPanel.setLayout(new BorderLayout());
            originalPanel.add(originalPanelTen, BorderLayout.CENTER);
            originalPanel.revalidate();
            originalPanel.repaint();
        
               
            
    }//GEN-LAST:event_randonNoisesMenuActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        RandomNoises randomN = new RandomNoises();
        
        BufferedImage firstNoise = randomN.randomNoises(originalImage);
        ImagePanel firPanel = new ImagePanel();
        firPanel.setImage(firstNoise);
        firstPanel.removeAll();
        firstPanel.setLayout(new BorderLayout());
        firstPanel.add(firPanel, BorderLayout.CENTER);
        firstPanel.revalidate();
        firstPanel.repaint();
                
        BufferedImage secondNoise = randomN.randomNoises(originalImage);
        ImagePanel secPanel = new ImagePanel();
        secPanel.setImage(secondNoise);
        secondPanel.removeAll();
        secondPanel.setLayout(new BorderLayout());
        secondPanel.add(secPanel, BorderLayout.CENTER);
        secondPanel.revalidate();
        secondPanel.repaint();        

        BufferedImage thirdNoise = randomN.randomNoises(originalImage);
        ImagePanel thiPanel = new ImagePanel();
        thiPanel.setImage(thirdNoise);
        thirdPanel.removeAll();
        thirdPanel.setLayout(new BorderLayout());
        thirdPanel.add(thiPanel, BorderLayout.CENTER);
        thirdPanel.revalidate();
        thirdPanel.repaint();
        
        BufferedImage fourthNoise = randomN.randomNoises(originalImage);
        ImagePanel fouPanel = new ImagePanel();
        fouPanel.setImage(fourthNoise);
        fourthPanel.removeAll();
        fourthPanel.setLayout(new BorderLayout());
        fourthPanel.add(fouPanel, BorderLayout.CENTER);
        fourthPanel.revalidate();
        fourthPanel.repaint();
        
        BufferedImage fifithNoise = randomN.randomNoises(originalImage);
        ImagePanel fifPanel = new ImagePanel();
        fifPanel.setImage(fifithNoise);
        fifithPanel.removeAll();
        fourthPanel.setLayout(new BorderLayout());
        fourthPanel.add(fifPanel, BorderLayout.CENTER);
        fourthPanel.revalidate();
        fourthPanel.repaint();
        
        BufferedImage sixthNoise = randomN.randomNoises(originalImage);
        ImagePanel sixPanel = new ImagePanel();
        sixPanel.setImage(sixthNoise);
        sixthPanel.removeAll();
        sixthPanel.setLayout(new BorderLayout());
        sixthPanel.add(sixPanel, BorderLayout.CENTER);
        sixthPanel.revalidate();
        sixthPanel.repaint();
        
        BufferedImage seventhNoise = randomN.randomNoises(originalImage);
        ImagePanel sevPanel = new ImagePanel();
        sevPanel.setImage(seventhNoise);
        seventhPanel.removeAll();
        seventhPanel.setLayout(new BorderLayout());
        seventhPanel.add(sevPanel, BorderLayout.CENTER);
        seventhPanel.revalidate();
        seventhPanel.repaint();
        
        BufferedImage eighthNoise = randomN.randomNoises(originalImage);
        ImagePanel eigPanel = new ImagePanel();
        eigPanel.setImage(eighthNoise);
        eighthPanel.removeAll();
        eighthPanel.setLayout(new BorderLayout());
        eighthPanel.add(eigPanel, BorderLayout.CENTER);
        eighthPanel.revalidate();
        eighthPanel.repaint();
        
        
                
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        AverageFilter averageFilter = new AverageFilter();
        ImagePanel averagePanels = new ImagePanel();
        
        ArrayList<JPanel> panels = new ArrayList<>();
        panels.add(firstPanel);
        panels.add(secondPanel);
        panels.add(thirdPanel);
        panels.add(fourthPanel);
       // panels.add(fifithPanel); //have problems because the interface is SMALL
        panels.add(sixthPanel);
        panels.add(seventhPanel);
        panels.add(eighthPanel);
        
        ArrayList<BufferedImage> imgs  = new ArrayList<>();
        
        for(JPanel panel : panels){
            imgs.add(averagePanels.panelToBufferedImage(panel));
        }
        
        BufferedImage filteredImage = averageFilter.applyAverageFilter(originalImage, imgs);
        
        ArrayList<JPanel> newImagePanel = new ArrayList<>(panels);
        for(JPanel panel : newImagePanel){
            ImagePanel newPanel = new ImagePanel();
            newPanel.setImage(filteredImage);
            panel.removeAll();
            panel.setLayout(new BorderLayout());
            panel.add(newPanel, BorderLayout.CENTER);
            panel.revalidate();
            panel.repaint();
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void equalizationMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_equalizationMenuActionPerformed
        // TODO add your handling code here:
        CardLayout cardLayout =  (CardLayout) mainPanel.getLayout();
        cardLayout.show(mainPanel,"Equalization");
        notEqualizadePanel.removeAll();
        EqualizedPanel.removeAll();
        ImagePanel NotEqualizePanel = new ImagePanel();
        NotEqualizePanel.setImage(originalImage);
        notEqualizadePanel.removeAll();
        notEqualizadePanel.setLayout(new BorderLayout());
        notEqualizadePanel.add(NotEqualizePanel, BorderLayout.CENTER);
        notEqualizadePanel.revalidate();
        notEqualizadePanel.repaint();
        EqualizedPanel.removeAll();
    }//GEN-LAST:event_equalizationMenuActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        Equalization equalization = new Equalization();
        BufferedImage equalizededImg = equalization.EqualizationImg(originalImage);
        ImagePanel newEqualizedPanel = new ImagePanel();
        newEqualizedPanel.setImage(equalizededImg);
        EqualizedPanel.removeAll();
        EqualizedPanel.setLayout(new BorderLayout());
        EqualizedPanel.add(newEqualizedPanel, BorderLayout.CENTER);
        EqualizedPanel.revalidate();
        EqualizedPanel.repaint();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void getEqualizadedButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getEqualizadedButtonActionPerformed
        // TODO add your handling code here:
             
       ImagePanel getImg = new ImagePanel();
       originalImage = getImg.panelToBufferedImage(EqualizedPanel);
       notEqualizadePanel.removeAll();
       ImagePanel Equalizaded = new ImagePanel();
       Equalizaded.setImage(originalImage);
       notEqualizadePanel.setLayout(new BorderLayout());
       notEqualizadePanel.add(Equalizaded, BorderLayout.CENTER);
       notEqualizadePanel.revalidate();
       notEqualizadePanel.repaint();
    }//GEN-LAST:event_getEqualizadedButtonActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        optInterpolation = 1;
        int heightInterpolation = Integer.parseInt(heightInterpolationText.getText());
        int widthInterpolation = Integer.parseInt(widthInterpolationText.getText());
        
        Interpolation interpolation = new Interpolation();
        BufferedImage interpoledNNimg = interpolation.NearstNeighborInterpolation(originalImage,heightInterpolation,widthInterpolation);
        ImagePanel newInterpoledPanel = new ImagePanel();
        newInterpoledPanel.setImage(interpoledNNimg);
        InterpoledPanel.removeAll();
        InterpoledPanel.setLayout(new BorderLayout());
        InterpoledPanel.add(newInterpoledPanel, BorderLayout.CENTER);
        InterpoledPanel.revalidate();
        InterpoledPanel.repaint();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void interpolationMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_interpolationMenuActionPerformed
        // TODO add your handling code here:
        CardLayout cardLayout =  (CardLayout) mainPanel.getLayout();
        cardLayout.show(mainPanel,"Interpolation");
        
        
        ImagePanel notInterpoled = new ImagePanel();
        notInterpoled.setImage(originalImage);
        notInterpoledPanel.removeAll();
        notInterpoledPanel.setLayout(new BorderLayout());
        notInterpoledPanel.add(notInterpoled, BorderLayout.CENTER);
        notInterpoledPanel.revalidate();
        notInterpoledPanel.repaint();
        InterpoledPanel.removeAll();
        
    }//GEN-LAST:event_interpolationMenuActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        
        optInterpolation = 2;
        
        int heightInterpolation = Integer.parseInt(heightInterpolationText.getText());
        int widthInterpolation = Integer.parseInt(widthInterpolationText.getText());
        
        Interpolation interpolation = new Interpolation();
        BufferedImage interpoledBilenearimg = interpolation.BilinearInterpolation(originalImage,heightInterpolation,widthInterpolation);
        ImagePanel newInterpoledPanel = new ImagePanel();
        newInterpoledPanel.setImage(interpoledBilenearimg);
        InterpoledPanel.removeAll();
        InterpoledPanel.setLayout(new BorderLayout());
        InterpoledPanel.add(newInterpoledPanel, BorderLayout.CENTER);
        InterpoledPanel.revalidate();
        InterpoledPanel.repaint();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void getInterpoledButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getInterpoledButtonActionPerformed
        // TODO add your handling code here:
        ImagePanel getImg = new ImagePanel();
        originalImage = getImg.panelToBufferedImage(InterpoledPanel);
        notInterpoledPanel.removeAll();
        getImg.setImage(originalImage);
        notInterpoledPanel.setLayout(new BorderLayout());
        notInterpoledPanel.add(getImg, BorderLayout.CENTER);
        notInterpoledPanel.revalidate();
        notInterpoledPanel.repaint();
    }//GEN-LAST:event_getInterpoledButtonActionPerformed

    private void meanMedianMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_meanMedianMenuActionPerformed
        // TODO add your handling code here:
        CardLayout cardLayout =  (CardLayout) mainPanel.getLayout();
        cardLayout.show(mainPanel,"MeanMedian");
        
        ImagePanel notFilterMM = new ImagePanel();
        notFilterMM.setImage(originalImage);
        notFilterPanel.removeAll();
        FilterPanel.removeAll();
        notFilterPanel.setLayout(new BorderLayout());
        notFilterPanel.add(notFilterMM, BorderLayout.CENTER);
        notFilterPanel.revalidate();
        notFilterPanel.repaint();
        
        
       
        
    }//GEN-LAST:event_meanMedianMenuActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        RandomNoises randomN = new RandomNoises();
        
        BufferedImage NoiseImg = randomN.randomNoises(originalImage);
        ImagePanel NoisePanel = new ImagePanel();
        NoisePanel.setImage(NoiseImg);
        FilterPanel.removeAll();
        FilterPanel.setLayout(new BorderLayout());
        FilterPanel.add(NoisePanel, BorderLayout.CENTER);
        FilterPanel.revalidate();
        FilterPanel.repaint();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        MeanMedianFilters meanFilter = new MeanMedianFilters();
        BufferedImage meanImage = meanFilter.MeanFilter3x3(originalImage);
        ImagePanel MeanFiltered = new ImagePanel();
        MeanFiltered.setImage(meanImage);
        FilterPanel.removeAll();
        FilterPanel.setLayout(new BorderLayout());
        FilterPanel.add(MeanFiltered, BorderLayout.CENTER);
        FilterPanel.revalidate();
        FilterPanel.repaint();
        
        
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        MeanMedianFilters mean9Filter = new MeanMedianFilters();
        BufferedImage mean9Image = mean9Filter.MeanFilter9x9(originalImage);
        ImagePanel mean9Filtered = new ImagePanel();
        mean9Filtered.setImage(mean9Image);
        FilterPanel.removeAll();
        FilterPanel.setLayout(new BorderLayout());
        FilterPanel.add(mean9Filtered, BorderLayout.CENTER);
        FilterPanel.revalidate();
        FilterPanel.repaint();
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        
        MeanMedianFilters medianFilter = new MeanMedianFilters();
        BufferedImage medianImage = medianFilter.MedianFilter(originalImage);
        ImagePanel medianFiltered = new ImagePanel();
        medianFiltered.setImage(medianImage);
        FilterPanel.removeAll();
        FilterPanel.setLayout(new BorderLayout());
        FilterPanel.add(medianFiltered, BorderLayout.CENTER);
        FilterPanel.revalidate();
        FilterPanel.repaint();
    }//GEN-LAST:event_jButton10ActionPerformed

    private void highlightMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_highlightMenuActionPerformed
        // TODO add your handling code here:
        CardLayout cardLayout =  (CardLayout) mainPanel.getLayout();
        cardLayout.show(mainPanel,"Highlight");
        
        ImagePanel notHighlight = new ImagePanel();
        notHighlight.setImage(originalImage);
        notHighlightPanel.removeAll();
        HighlitedPanel.removeAll();
        notHighlightPanel.setLayout(new BorderLayout());
        notHighlightPanel.add(notHighlight, BorderLayout.CENTER);
        notHighlightPanel.revalidate();
        notHighlightPanel.repaint();
        
        HighlitedPanel.removeAll();
        
        xTextField.setVisible(false);
        yTextField.setVisible(false);
        mTextField.setVisible(false);
        xLabel.setVisible(false);
        yLabel.setVisible(false);
        mLabel.setVisible(false);
        
    }//GEN-LAST:event_highlightMenuActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        int threshold = Integer.parseInt(thresholdTextField.getText());
        Highlight highlight = new Highlight();
        BufferedImage binarizedImage = highlight.Binarization(originalImage,threshold);
        
        ImagePanel binarizedPanel = new ImagePanel();
        binarizedPanel.setImage(binarizedImage);
        HighlitedPanel.removeAll();
        HighlitedPanel.setLayout(new BorderLayout());
        HighlitedPanel.add(binarizedPanel, BorderLayout.CENTER);
        HighlitedPanel.revalidate();
        HighlitedPanel.repaint();
        
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
        int threshold = Integer.parseInt(thresholdTextField.getText());
        Highlight highlight = new Highlight();
        BufferedImage thresholdedImage = highlight.thresholding(originalImage,threshold);
        
        ImagePanel binarizedPanel = new ImagePanel();
        binarizedPanel.setImage(thresholdedImage);
        HighlitedPanel.removeAll();
        HighlitedPanel.setLayout(new BorderLayout());
        HighlitedPanel.add(binarizedPanel, BorderLayout.CENTER);
        HighlitedPanel.revalidate();
        HighlitedPanel.repaint();
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
        Highlight highlight = new Highlight();
        BufferedImage laplacianImage = highlight.Laplacian(originalImage);
        
        ImagePanel laplacianePanel = new ImagePanel();
        laplacianePanel.setImage(laplacianImage);
        HighlitedPanel.removeAll();
        HighlitedPanel.setLayout(new BorderLayout());
        HighlitedPanel.add(laplacianePanel, BorderLayout.CENTER);
        HighlitedPanel.revalidate();
        HighlitedPanel.repaint();
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        // TODO add your handling code here:
        Highlight highlight = new Highlight();
        BufferedImage laplacianImage9x9 = highlight.Laplacian9X9(originalImage);
        
        ImagePanel laplacianePanel = new ImagePanel();
        laplacianePanel.setImage(laplacianImage9x9);
        HighlitedPanel.removeAll();
        HighlitedPanel.setLayout(new BorderLayout());
        HighlitedPanel.add(laplacianePanel, BorderLayout.CENTER);
        HighlitedPanel.revalidate();
        HighlitedPanel.repaint();
        
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        // TODO add your handling code here:
        Highlight highlight = new Highlight();
        BufferedImage laplacianImageA = highlight.applyLaplaciane(originalImage);
        
        ImagePanel laplacianePanel = new ImagePanel();
        laplacianePanel.setImage(laplacianImageA);
        HighlitedPanel.removeAll();
        HighlitedPanel.setLayout(new BorderLayout());
        HighlitedPanel.add(laplacianePanel, BorderLayout.CENTER);
        HighlitedPanel.revalidate();
        HighlitedPanel.repaint();
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        // TODO add your handling code here:
        ImagePanel getImg = new ImagePanel();
        originalImage = getImg.panelToBufferedImage(HighlitedPanel);

        notHighlightPanel.removeAll();
        getImg.setImage(originalImage);
        notHighlightPanel.setLayout(new BorderLayout());
        notHighlightPanel.add(getImg, BorderLayout.CENTER);
        notHighlightPanel.revalidate();
        notHighlightPanel.repaint();

    }//GEN-LAST:event_jButton16ActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        // TODO add your handling code here:
        
        Highlight highlight = new Highlight();
        BufferedImage sobelImage = highlight.Sobel(originalImage);
        
        ImagePanel sobelPanel = new ImagePanel();
        sobelPanel.setImage(sobelImage);
        HighlitedPanel.removeAll();
        HighlitedPanel.setLayout(new BorderLayout());
        HighlitedPanel.add(sobelPanel, BorderLayout.CENTER);
        HighlitedPanel.revalidate();
        HighlitedPanel.repaint();
        xTextField.setVisible(true);
        yTextField.setVisible(true);
        mTextField.setVisible(true);
        xLabel.setVisible(true);
        yLabel.setVisible(true);
        mLabel.setVisible(true);
        
    }//GEN-LAST:event_jButton17ActionPerformed

    private void HighlitedPanelMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HighlitedPanelMouseMoved
        // TODO add your handling code here:
        int x = evt.getX();
        int y = evt.getY();
        
        String startX = Integer.toString(x);
        String startY = Integer.toString(y);
        
        Highlight highlight = new Highlight();
        
        int value = highlight.Magnitude(originalImage, x, y);
        
        String valueText = Integer.toString(value);
        
        xTextField.setText(startX);
        yTextField.setText(startY);
        mTextField.setText(valueText);
    }//GEN-LAST:event_HighlitedPanelMouseMoved

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        // TODO add your handling code here:
        Highlight highlight = new Highlight();
        double c = Double.parseDouble(cTextField.getText());
        double y = Double.parseDouble(gammaTextField.getText());
        
        BufferedImage compressedImage = highlight.DinamicScaleCompression(originalImage,c,y);
        
        ImagePanel compressedPanel = new ImagePanel();
        compressedPanel.setImage(compressedImage);
        HighlitedPanel.removeAll();
        HighlitedPanel.setLayout(new BorderLayout());
        HighlitedPanel.add(compressedPanel, BorderLayout.CENTER);
        HighlitedPanel.revalidate();
        HighlitedPanel.repaint();
        
        

    }//GEN-LAST:event_jButton18ActionPerformed

    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
        // TODO add your handling code here:
        ImagePanel getImg = new ImagePanel();
        originalImage = getImg.panelToBufferedImage(FilterPanel);
        
        notFilterPanel.removeAll();
        getImg.setImage(originalImage);
        notFilterPanel.setLayout(new BorderLayout());
        notFilterPanel.add(getImg, BorderLayout.CENTER);
        notFilterPanel.revalidate();
        notFilterPanel.repaint();
    }//GEN-LAST:event_jButton19ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
       SwingUtilities.invokeLater(() -> {
        ColorConverterFrame converter = new ColorConverterFrame();
        converter.setVisible(true);
    });
       
        
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        
        CardLayout cardLayout =  (CardLayout) mainPanel.getLayout();
        cardLayout.show(mainPanel,"Transformed");
        
        ImagePanel notFilterMM = new ImagePanel();
        notFilterMM.setImage(originalImage);
        notTransformedPanel.removeAll();
        TransformedPanel.removeAll();
        notTransformedPanel.setLayout(new BorderLayout());
        notTransformedPanel.add(notFilterMM, BorderLayout.CENTER);
        notTransformedPanel.revalidate();
        notTransformedPanel.repaint();
        
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton21ActionPerformed
        // TODO add your handling code here:
        ImagePanel getImg = new ImagePanel();
        originalImage = getImg.panelToBufferedImage(TransformedPanel);

        notTransformedPanel.removeAll();
        getImg.setImage(originalImage);
        notTransformedPanel.setLayout(new BorderLayout());
        notTransformedPanel.add(getImg, BorderLayout.CENTER);
        notTransformedPanel.revalidate();
        notTransformedPanel.repaint();
        
    }//GEN-LAST:event_jButton21ActionPerformed

    private void jButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20ActionPerformed
        // TODO add your handling code here:
        if (originalImage == null) {
            JOptionPane.showMessageDialog(this, "Carregue uma imagem primeiro!");
            return;
        }
        
        dctResult = transformer.applyDCT(originalImage);

        ImagePanel istransformedPanel = new ImagePanel();
        istransformedPanel.setImage(dctResult.spectrumImage);
        TransformedPanel.removeAll();
        TransformedPanel.setLayout(new BorderLayout());
        TransformedPanel.add(istransformedPanel, BorderLayout.CENTER);
        TransformedPanel.revalidate();
        TransformedPanel.repaint();
        
    }//GEN-LAST:event_jButton20ActionPerformed

    private void jButton22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton22ActionPerformed
        // TODO add your handling code here:
        if (dctResult == null) {
            JOptionPane.showMessageDialog(this, "Aplique a DCT primeiro!");
            return;
        }
        
        BufferedImage reconstructed = transformer.reconstructFromDCT(dctResult, originalImage);

        ImagePanel istransformedPanel = new ImagePanel();
        istransformedPanel.setImage(reconstructed);
        TransformedPanel.removeAll();
        TransformedPanel.setLayout(new BorderLayout());
        TransformedPanel.add(istransformedPanel, BorderLayout.CENTER);
        TransformedPanel.revalidate();
        TransformedPanel.repaint();
    }//GEN-LAST:event_jButton22ActionPerformed

    private void jButton23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton23ActionPerformed
        // TODO add your handling code here:
        Transformed noise = new Transformed();
     //   BufferedImage notTransformed = noise.applyNoise(originalImage, size);
        ImagePanel istransformedPanel = new ImagePanel();
      //  istransformedPanel.setImage(notTransformed);
        TransformedPanel.removeAll();
        TransformedPanel.setLayout(new BorderLayout());
        TransformedPanel.add(istransformedPanel, BorderLayout.CENTER);
        TransformedPanel.revalidate();
        TransformedPanel.repaint();
        
    }//GEN-LAST:event_jButton23ActionPerformed

    private void jAltasButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAltasButton1ActionPerformed
        // TODO add your handling code here:
        if(jBaixasRadioButton2.isSelected()){
            jAltasButton1.setSelected(false);
        }
    }//GEN-LAST:event_jAltasButton1ActionPerformed

    private void jBaixasRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBaixasRadioButton2ActionPerformed
        // TODO add your handling code here:
        if(jAltasButton1.isSelected()){
            jBaixasRadioButton2.setSelected(false);
        }
    }//GEN-LAST:event_jBaixasRadioButton2ActionPerformed

    private void jButton24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton24ActionPerformed
        // TODO add your handling code here:
         if (dctResult == null) {
            JOptionPane.showMessageDialog(this, "Aplique a DCT primeiro!");
            return;
        }
        
        Transformed.FilterType opt = null;
        int cut = Integer.parseInt(LimiarTextField1.getText());

        if(jAltasButton1.isSelected()) {
            opt = Transformed.FilterType.PASSA_ALTA; 
        }
        if(jBaixasRadioButton2.isSelected()) {
            opt = Transformed.FilterType.PASSA_BAIXA; 
        }
        
        double normalizeCut = cut / 100;
        // Aplica o filtro NOS COEFICIENTES ATUAIS
        dctResult = transformer.applyFilterToDCT(dctResult, opt, normalizeCut);
        
        // Mostra o novo espectro filtrado
        ImagePanel istransformedPanel = new ImagePanel();
        istransformedPanel.setImage(dctResult.spectrumImage);
        TransformedPanel.removeAll();
        TransformedPanel.setLayout(new BorderLayout());
        TransformedPanel.add(istransformedPanel, BorderLayout.CENTER);
        TransformedPanel.revalidate();
        TransformedPanel.repaint();
    }//GEN-LAST:event_jButton24ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
        CardLayout cardLayout =  (CardLayout) mainPanel.getLayout();
        cardLayout.show(mainPanel,"minMax");
            ImagePanel OriginalPanel = new ImagePanel();
            notMinMaxPanel.removeAll();
            notMinMaxPanel.removeAll();
            OriginalPanel.setImage(originalImage);
            notMinMaxPanel.setLayout(new BorderLayout());
            notMinMaxPanel.add(OriginalPanel, BorderLayout.CENTER);
            notMinMaxPanel.revalidate();
            notMinMaxPanel.repaint();
        
        
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jButton25ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton25ActionPerformed
        // TODO add your handling code here:
        
        MinMax minFilter = new MinMax();
        
        BufferedImage minMaxF = minFilter.minFilter(originalImage);
        ImagePanel MeanFiltered = new ImagePanel();
        MeanFiltered.setImage(minMaxF);
        minMaxPanel.removeAll();
        minMaxPanel.setLayout(new BorderLayout());
        minMaxPanel.add(MeanFiltered, BorderLayout.CENTER);
        minMaxPanel.revalidate();
        minMaxPanel.repaint();
        
    }//GEN-LAST:event_jButton25ActionPerformed

    private void jButton28ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton28ActionPerformed
        // TODO add your handling code here:
        ImagePanel getImg = new ImagePanel();
        originalImage = getImg.panelToBufferedImage(minMaxPanel);
        
        notMinMaxPanel.removeAll();
        getImg.setImage(originalImage);
        notMinMaxPanel.setLayout(new BorderLayout());
        notMinMaxPanel.add(getImg, BorderLayout.CENTER);
        notMinMaxPanel.revalidate();
        notMinMaxPanel.repaint();
    }//GEN-LAST:event_jButton28ActionPerformed

    private void jButton26ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton26ActionPerformed
        // TODO add your handling code here:
        MinMax minFilter = new MinMax();
        BufferedImage minMaxF = minFilter.maxFilter(originalImage);
        ImagePanel MeanFiltered = new ImagePanel();
        MeanFiltered.setImage(minMaxF);
        minMaxPanel.removeAll();
        minMaxPanel.setLayout(new BorderLayout());
        minMaxPanel.add(MeanFiltered, BorderLayout.CENTER);
        minMaxPanel.revalidate();
        minMaxPanel.repaint();
    }//GEN-LAST:event_jButton26ActionPerformed

    private void jButton27ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton27ActionPerformed
        // TODO add your handling code here:
        MinMax minFilter = new MinMax();
        BufferedImage minMaxF = minFilter.midpointFilter(originalImage);
        ImagePanel MeanFiltered = new ImagePanel();
        MeanFiltered.setImage(minMaxF);
        minMaxPanel.removeAll();
        minMaxPanel.setLayout(new BorderLayout());
        minMaxPanel.add(MeanFiltered, BorderLayout.CENTER);
        minMaxPanel.revalidate();
        minMaxPanel.repaint();
    }//GEN-LAST:event_jButton27ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // TODO add your handling code here:
        CardLayout cardLayout =  (CardLayout) mainPanel.getLayout();
        cardLayout.show(mainPanel,"colored");
        ImagePanel OriginalPanel = new ImagePanel();
        notColoredPanel.removeAll();
        notColoredPanel.removeAll();
        OriginalPanel.setImage(originalImage);
        notColoredPanel.setLayout(new BorderLayout());
        notColoredPanel.add(OriginalPanel, BorderLayout.CENTER);
        notColoredPanel.revalidate();
        notColoredPanel.repaint();
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jButton29ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton29ActionPerformed
        // TODO add your handling code here:

        ColorImage colored = new ColorImage();
        BufferedImage colorImage = colored.applyColorScale(originalImage);
        ImagePanel MeanFiltered = new ImagePanel();
        MeanFiltered.setImage(colorImage);
        ColoredPanel.removeAll();
        ColoredPanel.setLayout(new BorderLayout());
        ColoredPanel.add(MeanFiltered, BorderLayout.CENTER);
        ColoredPanel.revalidate();
        ColoredPanel.repaint();
    }//GEN-LAST:event_jButton29ActionPerformed

    private void jButton30ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton30ActionPerformed
        // TODO add your handling code here:

        ImagePanel getImg = new ImagePanel();
        originalImage = getImg.panelToBufferedImage(minMaxPanel);
        
        notColoredPanel.removeAll();
        getImg.setImage(originalImage);
        notColoredPanel.setLayout(new BorderLayout());
        notColoredPanel.add(getImg, BorderLayout.CENTER);
        notColoredPanel.revalidate();
        notColoredPanel.repaint();
        
    }//GEN-LAST:event_jButton30ActionPerformed

    private void jButton31ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton31ActionPerformed
        // TODO add your handling code here:
        ColorImage colored = new ColorImage();
        BufferedImage colorImage = colored.equalizeHSL(originalImage);
        ImagePanel equalizeL = new ImagePanel();
        equalizeL.setImage(colorImage);
        ColoredPanel.removeAll();
        ColoredPanel.setLayout(new BorderLayout());
        ColoredPanel.add(equalizeL, BorderLayout.CENTER);
        ColoredPanel.revalidate();
        ColoredPanel.repaint();
        
    }//GEN-LAST:event_jButton31ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        // TODO add your handling code here:
        CardLayout cardLayout =  (CardLayout) mainPanel.getLayout();
        cardLayout.show(mainPanel,"otsu");
        ImagePanel OriginalPanel = new ImagePanel();
        nototsuPanel.removeAll();
        nototsuPanel.removeAll();
        OriginalPanel.setImage(originalImage);
        nototsuPanel.setLayout(new BorderLayout());
        nototsuPanel.add(OriginalPanel, BorderLayout.CENTER);
        nototsuPanel.revalidate();
        nototsuPanel.repaint();
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jButton32ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton32ActionPerformed
        // TODO add your handling code here:
        Highlight otsu = new Highlight();
        optimalThreshold = otsu.calculateOtsuThreshold(originalImage);
        AvisoLabel27.setText("OTSU CALCULADO");
    }//GEN-LAST:event_jButton32ActionPerformed

    private void jButton33ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton33ActionPerformed
        // TODO add your handling code here:
        Highlight otsu = new Highlight();
        BufferedImage otsuImage = otsu.Binarization(originalImage, optimalThreshold);
        ImagePanel equalizeL = new ImagePanel();
        equalizeL.setImage(otsuImage);
        otsuApplyPanel.removeAll();
        otsuApplyPanel.setLayout(new BorderLayout());
        otsuApplyPanel.add(equalizeL, BorderLayout.CENTER);
        otsuApplyPanel.revalidate();
        otsuApplyPanel.repaint();
    }//GEN-LAST:event_jButton33ActionPerformed

    private void jButton34ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton34ActionPerformed
        // TODO add your handling code here:

        Highlight otsu = new Highlight();
        BufferedImage otsuImage = otsu.thresholding(originalImage, optimalThreshold);
        ImagePanel equalizeL = new ImagePanel();
        equalizeL.setImage(otsuImage);
        otsuApplyPanel.removeAll();
        otsuApplyPanel.setLayout(new BorderLayout());
        otsuApplyPanel.add(equalizeL, BorderLayout.CENTER);
        otsuApplyPanel.revalidate();
        otsuApplyPanel.repaint();
    }//GEN-LAST:event_jButton34ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        // TODO add your handling code here:

        CardLayout cardLayout =  (CardLayout) mainPanel.getLayout();
        cardLayout.show(mainPanel,"thinning");
        ImagePanel OriginalPanel = new ImagePanel();
        notThinningPanel3.removeAll();
        notThinningPanel3.removeAll();
        OriginalPanel.setImage(originalImage);
        notThinningPanel3.setLayout(new BorderLayout());
        notThinningPanel3.add(OriginalPanel, BorderLayout.CENTER);
        notThinningPanel3.revalidate();
        notThinningPanel3.repaint();
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jButton35ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton35ActionPerformed
        // TODO add your handling code here:
        Thinning thinning = new Thinning();
        BufferedImage thinningImage = thinning.zhangSuenThinning(originalImage);
        ImagePanel equalizeL = new ImagePanel();
        equalizeL.setImage(thinningImage);
        thinningApplyPanel4.removeAll();
        thinningApplyPanel4.setLayout(new BorderLayout());
        thinningApplyPanel4.add(equalizeL, BorderLayout.CENTER);
        thinningApplyPanel4.revalidate();
        thinningApplyPanel4.repaint();
    }//GEN-LAST:event_jButton35ActionPerformed

    private void jButton36ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton36ActionPerformed
        // TODO add your handling code here:
        ImagePanel getImg = new ImagePanel();
        originalImage = getImg.panelToBufferedImage(FilterPanel);
        
        notThinningPanel3.removeAll();
        getImg.setImage(originalImage);
        notThinningPanel3.setLayout(new BorderLayout());
        notThinningPanel3.add(getImg, BorderLayout.CENTER);
        notThinningPanel3.revalidate();
        notThinningPanel3.repaint();
    }//GEN-LAST:event_jButton36ActionPerformed
private void adicionarRuidoEsparso(int centroX, int centroY, int raio) {
    Random rand = new Random(); 
    for (int x = centroX - raio; x <= centroX + raio; x++) {
        for (int y = centroY - raio; y <= centroY + raio; y++) {
            if (x >= 0 && y >= 0 && x < originalImage.getWidth() && y < originalImage.getHeight()) {
                double distancia = Math.sqrt(Math.pow(x - centroX, 2) + Math.pow(y - centroY, 2));
                if (distancia <= raio) {
                    // Apenas alguns pixels serão alterados (ex.: 15% de chance)
                    if (rand.nextDouble() < 0.15) {
                        aplicarRuidoNoPixel(x, y);
                    }
                }
            }
        }
    }
    repaint();
}
private void aplicarRuidoNoPixel(int x, int y) {
    Random rand = new Random();
    int rgb = 0xFFFFFF;
    originalImage.setRGB(x, y, rgb);
}
    private void notTransformedPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_notTransformedPanelMouseClicked
        // TODO add your handling code here:
        int clickX = evt.getX();
        int clickY = evt.getY();

        // Defina o raio da área de ruído
        int raio = 50; // por exemplo, 50 pixels em volta

        // Chama a função para adicionar ruído ao redor do clique
        adicionarRuidoEsparso(clickX, clickY, raio);  
    }//GEN-LAST:event_notTransformedPanelMouseClicked
   
   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(dpiGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(dpiGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(dpiGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(dpiGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new dpiGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AvisoLabel27;
    private javax.swing.JPanel BcolorPanel;
    private javax.swing.JTextField BvalueTextField;
    private javax.swing.JPanel ColoredImagePanel;
    private javax.swing.JPanel ColoredPanel;
    private javax.swing.JPanel ConvertToGray;
    private javax.swing.JPanel CosTransformedPanel;
    private javax.swing.JPanel EqualizationPanel;
    private javax.swing.JPanel EqualizedPanel;
    private javax.swing.JPanel FilterPanel;
    private javax.swing.JPanel GcolorPanel;
    private javax.swing.JPanel GrayImage;
    private javax.swing.JTextField GvalueTextField;
    private javax.swing.JPanel HighlightPanel;
    private javax.swing.JPanel HighlitedPanel;
    private javax.swing.JPanel InterpolationPanel;
    private javax.swing.JPanel InterpoledPanel;
    private javax.swing.JTextField LimiarTextField1;
    private javax.swing.JPanel MeanMedianPanel;
    private javax.swing.JPanel MinMaxMediumPointPanel;
    private javax.swing.JPanel OriginalColorsPanel;
    private javax.swing.JPanel OriginalImagePanel;
    private javax.swing.JTextField RGBTextField;
    private javax.swing.JPanel RcolorPanel;
    private javax.swing.JTextField RvalueTextField;
    private javax.swing.JPanel TenNoisesPanel;
    private javax.swing.JPanel ThinningPanel;
    private javax.swing.JPanel TransformedPanel;
    private javax.swing.JTextField XTextField;
    private javax.swing.JTextField YTextField;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextField cTextField;
    private javax.swing.JPanel eighthPanel;
    private javax.swing.JMenuItem equalizationMenu;
    private javax.swing.JPanel fifithPanel;
    private javax.swing.JPanel firstPanel;
    private javax.swing.JMenuItem foundPixelMenu;
    private javax.swing.JPanel fourthPanel;
    private javax.swing.JTextField gammaTextField;
    private javax.swing.JButton getEqualizadedButton;
    private javax.swing.JButton getImageButton;
    private javax.swing.JButton getInterpoledButton;
    private javax.swing.JButton getInversalButton;
    private javax.swing.JMenuItem grayToInversalMenu;
    private javax.swing.JTextField heightInterpolationText;
    private javax.swing.JMenuItem highlightMenu;
    private javax.swing.JMenuItem interpolationMenu;
    private javax.swing.JButton inversalButton;
    private javax.swing.JPanel inversalGrayPanel;
    private javax.swing.JPanel inversalPanel;
    private javax.swing.JRadioButton jAltasButton1;
    private javax.swing.JRadioButton jBaixasRadioButton2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton22;
    private javax.swing.JButton jButton23;
    private javax.swing.JButton jButton24;
    private javax.swing.JButton jButton25;
    private javax.swing.JButton jButton26;
    private javax.swing.JButton jButton27;
    private javax.swing.JButton jButton28;
    private javax.swing.JButton jButton29;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton30;
    private javax.swing.JButton jButton31;
    private javax.swing.JButton jButton32;
    private javax.swing.JButton jButton33;
    private javax.swing.JButton jButton34;
    private javax.swing.JButton jButton35;
    private javax.swing.JButton jButton36;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JButton jButtonConverter;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollBar jScrollBar1;
    private javax.swing.JLabel mLabel;
    private javax.swing.JTextField mTextField;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuItem meanMedianMenu;
    private javax.swing.JPanel minMaxPanel;
    private javax.swing.JPanel notColoredPanel;
    private javax.swing.JPanel notEqualizadePanel;
    private javax.swing.JPanel notFilterPanel;
    private javax.swing.JPanel notHighlightPanel;
    private javax.swing.JPanel notInterpoledPanel;
    private javax.swing.JPanel notMinMaxPanel;
    private javax.swing.JPanel notThinningPanel3;
    private javax.swing.JPanel notTransformedPanel;
    private javax.swing.JPanel nototsuPanel;
    private javax.swing.JPanel originalGrayPanel;
    private javax.swing.JPanel originalPanel;
    private javax.swing.JPanel originaltoRGBPanel;
    private javax.swing.JPanel otsuApplyPanel;
    private javax.swing.JPanel otsuPanel;
    private javax.swing.JPanel picPixelsPanel;
    private javax.swing.JPanel pixelsImagePanel;
    private javax.swing.JMenuItem randonNoisesMenu;
    private javax.swing.JPanel secondPanel;
    private javax.swing.JMenuItem separeteRGBMenu;
    private javax.swing.JPanel seventhPanel;
    private javax.swing.JPanel sixthPanel;
    private javax.swing.JPanel thinningApplyPanel4;
    private javax.swing.JPanel thirdPanel;
    private javax.swing.JTextField thresholdTextField;
    private javax.swing.JMenuItem toGrayMenu;
    private javax.swing.JTextField widthInterpolationText;
    private javax.swing.JLabel xLabel;
    private javax.swing.JTextField xTextField;
    private javax.swing.JLabel yLabel;
    private javax.swing.JTextField yTextField;
    // End of variables declaration//GEN-END:variables
}
